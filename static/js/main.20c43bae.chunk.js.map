{"version":3,"sources":["Context/actions.js","Context/reducer.js","Context/context.js","Pages/Dashboard.jsx","Pages/Entrance/Form.jsx","Pages/Entrance/index.jsx","Pages/NotFound.jsx","Pages/Settings/InstallAppExplanation.js","Pages/Settings/index.jsx","Config/utils.js","Pages/Workouts/LockScreen.jsx","Pages/Workouts/FullScreen.jsx","Config/routes.js","Pages/Workouts/index.jsx","Components/AppRoute.jsx","Components/Nav.jsx","Components/NotificationContainer.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["superagent","require","ROOT_PROD_URL","sucessObject","success","failureObject","loginUser","dispatch","history","payload","type","post","send","set","end","err","res","email","body","token","headers","localStorage","setItem","notification","text","push","error","message","a","getItem","get","_err","needsLoginToProceed","statusCode","logout","removeItem","initialState","loading","errorMessage","updateAvailable","AuthReducer","action","Error","AuthStateContext","createContext","AuthDispatchContext","useAuthState","context","useContext","undefined","useAuthDispatch","AuthProvider","children","useReducer","user","Provider","value","Dashboard","userDetails","className","onClick","checkAuth","Form","localEmail","setEmail","password","setPassword","primaryText","htmlFor","autoComplete","required","id","disabled","onChange","e","target","Entrance","useEffect","useState","activeTab","setActiveTab","handleLogin","preventDefault","sharedProps","switchTab","tab","role","NotFound","InstallAppExplanation","Settings","changelog","setChangelog","path","document","getElementById","dataset","fetch","then","json","finalChangelog","Object","keys","filter","item","satisfies","process","map","version","description","navigator","serviceWorker","getRegistration","reg","waiting","console","log","postMessage","changeset","timeToString","time","diffInHrs","diffInMin","Math","floor","mm","diffInSec","ss","diffInMs","ms","formattedMM","toString","padStart","formattedSS","formattedMS","LockScreen","screenLock","setScreenLock","locked","setLockedStatus","requestWakeLock","wakeLock","request","lock","name","release","FullScreen","fullscreenElement","inFullScreen","setScreenStatus","exitFullscreen","documentElement","requestFullscreen","routes","component","isPrivate","playing","setPlaying","startTime","setTime","elapsedTime","setElapsedTime","timerInterval","setTimerInterval","Pusher","logToConsole","pusher","cluster","channel","subscribe","bind","data","alert","JSON","stringify","unsubscribe","unbind","handleMainAction","clearInterval","Date","now","interval","setInterval","handleReset","tabIndex","alt","src","onKeyUp","key","AppRoute","Component","rest","render","props","Boolean","to","pathname","Nav","aria-label","aria-expanded","data-target","aria-hidden","activeClassName","NotificationContainer","dangerouslySetInnerHTML","__html","App","addPwaUpdateListener","isUpdateAvailable","route","index","exact","href","title","registerValidSW","swUrl","config","installingWorker","handleUpdate","register","registration","state","onupdatefound","installing","onstatechange","controller","onSuccess","catch","oldRegistration","oldSw","active","olsSwState","addEventListener","refreshing","newRegistration","newSw","newSwState","window","location","reload","isLocalhost","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","hashType","URL","origin","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.20c43bae.chunk.js","sourcesContent":["const superagent = require('superagent');\n\nconst ROOT_PROD_URL = 'https://glacial-plateau-65219.herokuapp.com';\nconst sucessObject = { success: true };\nconst failureObject = { success: false };\nconst unhandledErrorMsg = 'Unhandled error while logging in :(';\n\nexport function loginUser(dispatch, history, payload) {\n  dispatch({ type: 'REQUEST_LOGIN' });\n\n  return superagent\n    .post(`${ROOT_PROD_URL}/login`)\n    .send(payload) // sends a JSON post body\n    .set('Content-Type', 'application/json')\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      const email = res?.body?.email;\n      if (!err && email) {\n        // Using `Access-Control-Expose-Headers: 'Authorization'` response header,\n        // we are able to grab the Authorization token and save it in memory\n        var token = res.headers['Authorization'] || res.headers['authorization'];\n        dispatch({ type: 'LOGIN_SUCCESS', payload: { email: email, token: token } });\n        localStorage.setItem('currentUserEmail', email);\n        localStorage.setItem('currentUserToken', token);\n\n        dispatch({ type: 'TOGGLE_NOTIFICATION', notification: {\n          text: 'Logged in successfully!',\n          type: 'info'\n        }});\n        history.push('/dashboard');\n\n        return sucessObject;\n      }\n\n      dispatch({ type: 'LOGIN_ERROR', error: res?.body?.message || unhandledErrorMsg });\n      return failureObject;\n    });\n}\n\nexport async function checkAuth(dispatch) {\n  const token = localStorage.getItem('currentUserToken') || '';\n  return superagent\n    .get(`${ROOT_PROD_URL}/users/check`)\n    .set('Content-Type', 'application/json')\n    .set('Accept', 'application/json')\n    .set('Authorization', token)\n    .end((_err, res) => {\n      if (needsLoginToProceed(res, dispatch)) return;\n    });\n}\n\nfunction needsLoginToProceed(res, dispatch) {\n  if (res.statusCode !== 401) return false;\n\n  logout(dispatch);\n  dispatch({ type: 'TOGGLE_NOTIFICATION', notification: {\n    text: 'No longer signed in :( Please login to continue',\n    type: 'warning'\n  }});\n  return true;\n}\n\nexport async function logout(dispatch) {\n  dispatch({ type: 'LOGOUT' });\n  localStorage.removeItem('currentUserEmail');\n  localStorage.removeItem('currentUserToken');\n}\n","let email = localStorage.getItem('currentUserEmail') || '';\nlet token = localStorage.getItem('currentUserToken') || '';\n\nexport const initialState = {\n  email: '' || email,\n  token: '' || token,\n  loading: false,\n  notification: null,\n  errorMessage: null,\n  updateAvailable: false\n};\n\nexport const AuthReducer = (initialState, action) => {\n  switch (action.type) {\n    case 'REQUEST_LOGIN':\n    case 'REQUEST_AUTH':\n      return {\n        ...initialState,\n        loading: true,\n        errorMessage: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...initialState,\n        email: action.payload.email,\n        token: action.payload.token,\n        loading: false,\n        errorMessage: null\n      };\n    case 'LOGOUT':\n      return {\n        ...initialState,\n        email: '',\n        token: '',\n        errorMessage: null\n      };\n    case 'LOGIN_ERROR':\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error\n      };\n    case 'RESET_ERROR':\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: null\n      };\n    case 'TOGGLE_UPDATE_AVAILABLE':\n      return {\n        ...initialState,\n        updateAvailable: action.updateAvailable\n      };\n    case 'TOGGLE_NOTIFICATION':\n      return {\n        ...initialState,\n        notification: action.notification\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n","import React, { createContext, useContext, useReducer } from 'react';\nimport { AuthReducer, initialState } from './reducer';\n\nconst AuthStateContext = createContext();\nconst AuthDispatchContext = createContext();\n\nexport function useAuthState() {\n  const context = useContext(AuthStateContext);\n  if (context === undefined) {\n    throw new Error('useAuthState must be used within a AuthProvider');\n  }\n\n  return context;\n}\n\nexport function useAuthDispatch() {\n  const context = useContext(AuthDispatchContext);\n  if (context === undefined) {\n    throw new Error('useAuthDispatch must be used within a AuthProvider');\n  }\n\n  return context;\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, dispatch] = useReducer(AuthReducer, initialState);\n\n  return (\n    <AuthStateContext.Provider value={user}>\n      <AuthDispatchContext.Provider value={dispatch}>\n        {children}\n      </AuthDispatchContext.Provider>\n    </AuthStateContext.Provider>\n  );\n};\n","import React from 'react'\nimport { logout, checkAuth, useAuthDispatch, useAuthState } from '../Context';\n\nconst Dashboard = ({ history }) => {\n  const dispatch = useAuthDispatch();\n  const userDetails = useAuthState();\n\n  const handleLogout = () => {\n    logout(dispatch); // call the logout action\n    history.push('/entrance'); // navigate to logout page on logout\n  };\n\n  return (\n    <div>\n      <div className='' >\n        <h1 className='is-size-1 mb-5'>\n          Dashboard\n        </h1>\n\n        <div className='buttons'>\n          <button className='button is-default' onClick={handleLogout}>\n            Logout\n          </button>\n\n          <button className='button is-default' onClick={() => checkAuth(dispatch)}>\n            Check Auth :)\n          </button>\n        </div>\n      </div>\n\n      <p>\n        {`Welcome to the dashboard ${userDetails.email}!`}\n      </p>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nconst Form = ({ localEmail, setEmail, loading, password, setPassword, onClick, primaryText }) => (\n  <form>\n    <div className='field'>\n      <label className='label' htmlFor='email'>Email</label>\n      <div className='control'>\n        <input\n          className='input'\n          autoComplete='email'\n          required\n          type='text'\n          id='email'\n          disabled={loading}\n          value={localEmail}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n    </div>\n\n    <div className='field'>\n      <label className='label' htmlFor='password'>Password</label>\n      <div className='control'>\n        <input\n          className='input'\n          autoComplete='current-password'\n          required\n          type='password'\n          id='password'\n          disabled={loading}\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n    </div>\n\n    <button\n      type='submit'\n      className='button is-primary mt-5'\n      onClick={onClick}\n      disabled={loading}\n    >\n      {primaryText}\n    </button>\n  </form>\n);\n\nexport default Form;","import React, { useState, useEffect } from 'react';\nimport { loginUser, useAuthDispatch, useAuthState } from '../../Context';\nimport Form from './Form';\n\nconst Entrance = ({ history }) => {\n  const { email, loading, errorMessage } = useAuthState();\n  const dispatch = useAuthDispatch();\n\n  useEffect(() => {\n    if (email) {\n      history.push('/dashboard');\n    }\n  }, [email, history]);\n\n  const [localEmail, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [activeTab, setActiveTab] = useState('login');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    let payload = {\n      user: {\n        password,\n        email: localEmail\n      }\n    };\n\n    loginUser(dispatch, history, payload);\n  }\n  const sharedProps = {\n    localEmail,\n    password,\n    setEmail,\n    setPassword,\n    loading\n  };\n  const switchTab = (tab) => {\n    if (loading) return;\n\n    dispatch({ type: 'RESET_ERROR' });\n    setActiveTab(tab);\n  };\n\n  return (\n    <div className='columns is-centered'>\n      <div className='column is-half'>\n        {errorMessage && <p className='notification is-danger'>{errorMessage}</p>}\n\n        <div className='tabs is-medium'>\n          <ul>\n            <li className={activeTab === 'login' ? 'is-active' : undefined}>\n              {/* eslint-disable-next-line */}\n              <a role='menuitem' disabled={loading} onClick={() => switchTab('login')}>Login</a>\n            </li>\n            <li role='menuitem' className={activeTab === 'register' ? 'is-active' : undefined}>\n              {/* eslint-disable-next-line */}\n              <a disabled={loading} onClick={() => switchTab('register')}>Register</a>\n            </li>\n          </ul>\n        </div>\n\n        {activeTab === 'login' && (\n          <Form\n            {...sharedProps}\n            onClick={handleLogin}\n            primaryText='Login'\n          />\n        )}\n\n        {activeTab === 'register' && (\n          <Form\n            {...sharedProps}\n            onClick={handleLogin}\n            primaryText='Register'\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Entrance;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <h1 className='is-size-1 mb-5'>\n      Page not found!\n    </h1>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport 'pwa-helper-components/pwa-install-button.js';\n\nconst InstallAppExplanation = () => {\n  return (\n    <pwa-install-button>\n      <div className='box mt-5 content unclickable'>\n        <p>\n          This app is a PWA (progressive web app) that can be installed directly to your homescreen or desktop. It updates like other apps and provides a native like experience.\n        </p>\n        <ul>\n          <li>Fast</li>\n          <li>Reliable</li>\n          <li>Offline First</li>\n        </ul>\n      </div>\n\n      <button className='button is-primary'>\n        Install!\n      </button>\n    </pwa-install-button>\n  )\n}\n\nexport default InstallAppExplanation;\n","import React, { useState, useEffect } from 'react';\nimport { satisfies } from 'es-semver';\nimport InstallAppExplanation from './InstallAppExplanation';\nimport { useAuthDispatch, useAuthState } from '../../Context';\n\nconst Settings = () => {\n  const [ changelog, setChangelog] = useState(null);\n  const dispatch = useAuthDispatch();\n\n  useEffect(() => {\n    const path = document.getElementById('changelog-path').dataset.path;\n    fetch(path)\n      .then(res => res.json())\n      .then(changelog => {\n        const relevantVersions = Object.keys(changelog).filter(item => satisfies(item, `>${process.env.REACT_APP_VERSION}`));\n        const finalChangelog = relevantVersions.map(version => ({\n          version,\n          description: changelog[version].description\n        }));\n        setChangelog(finalChangelog);\n      });\n  }, []);\n\n  const refreshApp = function() {\n    navigator.serviceWorker.getRegistration()\n      .then(reg => {\n        if (reg.waiting) {\n          console.log('[Posting message from Update interface]');\n          reg.waiting.postMessage({ type: 'SKIP_WAITING' });\n        }\n\n        console.log('[Setting update available to false]');\n        // We assume that the SW get's he request and claims\n        dispatch({ type: 'TOGGLE_UPDATE_AVAILABLE', updateAvailable: false });\n      });\n  };\n\n  const { updateAvailable } = useAuthState();\n\n  return (\n    <>\n      <h1 className='is-size-1 mb-5'>My Settings</h1>\n\n      <div className='level mb-5'>\n        <div className='level-item has-text-centered'>\n          <div>\n            <p className='heading'>Tweets</p>\n            <p className='title'>3,456</p>\n          </div>\n        </div>\n        <div className='level-item has-text-centered'>\n          <div>\n            <p className='heading'>Following</p>\n            <p className='title'>123</p>\n          </div>\n        </div>\n        <div className='level-item has-text-centered'>\n          <div>\n            <p className='heading'>Followers</p>\n            <p className='title'>456K</p>\n          </div>\n        </div>\n        <div className='level-item has-text-centered'>\n          <div>\n            <p className='heading'>Likes</p>\n            <p className='title'>789</p>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <InstallAppExplanation />\n\n      {updateAvailable && (\n        <>\n          <div id='new-version-refresh-notification' className='mb-5 mt-5'>\n            <div className='notification is-info is-light is-flex is-align-items-center'>\n              A new version of DualTrack is available\n\n              <div className='button is-light ml-2' id='new-version-refresh-button' onClick={refreshApp}>\n                Refresh to Update\n              </div>\n            </div>\n          </div>\n\n          {changelog && changelog.map(changeset => (\n            <div key={changeset.version} className='box'>\n              <h3 className='is-size-3'>{changeset.version}</h3>\n              <p>{changeset.description}</p>\n            </div>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Settings;\n","// SVG Icon Links\nexport const pauseButtonSrc = 'https://res.cloudinary.com/https-tinloof-com/image/upload/v1593360448/blog/time-in-js/pause-button_pinhpy.svg';\nexport const playButtonSrc = 'https://res.cloudinary.com/https-tinloof-com/image/upload/v1593360448/blog/time-in-js/play-button_opkxmt.svg';\nexport const resetButtonSrc = 'https://res.cloudinary.com/https-tinloof-com/image/upload/v1593360448/blog/time-in-js/reset-button_mdv6wf.svg';\n\n// Convert time to a format of hours, minutes, seconds, and milliseconds\nexport function timeToString(time) {\n  let diffInHrs = time / 3600000;\n  let hh = Math.floor(diffInHrs);\n\n  let diffInMin = (diffInHrs - hh) * 60;\n  let mm = Math.floor(diffInMin);\n\n  let diffInSec = (diffInMin - mm) * 60;\n  let ss = Math.floor(diffInSec);\n\n  let diffInMs = (diffInSec - ss) * 100;\n  let ms = Math.floor(diffInMs);\n\n  let formattedMM = mm.toString().padStart(2, \"0\");\n  let formattedSS = ss.toString().padStart(2, \"0\");\n  let formattedMS = ms.toString().padStart(2, \"0\");\n\n  return `${formattedMM}:${formattedSS}:${formattedMS}`;\n}\n","import React, { useState } from 'react';\n\nconst LockScreen = () => {\n  const [screenLock, setScreenLock] = useState(null);\n  const [locked, setLockedStatus] = useState(false);\n\n  if (!('wakeLock' in navigator)) {\n    // Screen Wake Lock API is not supported 🎉\n    // - Need to be running the server in HTTPS mode\n    return null;\n  }\n\n  // Function that attempts to request a screen wake lock.\n  const requestWakeLock = async () => {\n    try {\n      const lock = await navigator.wakeLock.request('screen');\n      setScreenLock(lock);\n      setLockedStatus(true);\n    } catch (err) {\n      console.error(`${err.name}, ${err.message}`);\n    }\n  };\n  const releaseWakeLock = () => {\n    if (screenLock) screenLock.release();\n\n    setScreenLock(null);\n    setLockedStatus(false);\n  };\n\n  return (\n    <>\n      {locked ? (\n        <div className='button' onClick={releaseWakeLock}>\n          Unlock Page\n        </div>\n      ) : (\n        <div className='button' onClick={requestWakeLock}>\n          Lock Page\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default LockScreen;\n","import React, { useState } from 'react';\n\nconst FullScreen = () => {\n  const [inFullScreen, setScreenStatus] = useState(!!document.fullscreenElement);\n\n  const enterFullScreen = () => {\n    document.documentElement.requestFullscreen();\n    setScreenStatus(true);\n  };\n  const leaveFullScreen = () => {\n    document.exitFullscreen();\n    setScreenStatus(false);\n  };\n\n  return (\n    <>\n      {inFullScreen ? (\n        <div className='button' onClick={leaveFullScreen}>\n          Leave Full Screen\n        </div>\n      ) : (\n        <div className='button' onClick={enterFullScreen}>\n          Enter Full Screen\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FullScreen;\n","import Dashboard from '../Pages/Dashboard';\nimport Entrance from '../Pages/Entrance';\nimport NotFound from '../Pages/NotFound';\nimport Settings from '../Pages/Settings';\nimport Workouts from '../Pages/Workouts';\n\nconst routes =[\n  {\n    path:'/',\n    component: Entrance,\n    isPrivate: false\n  },\n  {\n    path:'/entrance',\n    component: Entrance,\n    isPrivate: false\n  },\n  {\n    path:'/dashboard',\n    component: Dashboard,\n    isPrivate: true\n  },\n  {\n    path:'/workouts',\n    component: Workouts,\n    isPrivate: true\n  },\n  {\n    path:'/settings',\n    component: Settings,\n    isPrivate: true\n  },\n  {\n    path:'/*',\n    component: NotFound,\n    isPrivate: false\n  },\n]\n\nexport default routes;\n","import React, { useEffect, useState } from 'react';\nimport Pusher from 'pusher-js/with-encryption';\nimport { pauseButtonSrc, playButtonSrc, resetButtonSrc, timeToString } from '../../Config/utils';\nimport LockScreen from './LockScreen';\nimport FullScreen from './FullScreen';\n\nconst Workouts = ({ history }) => {\n  // const dispatch = useAuthDispatch();\n  // const userDetails = useAuthState();\n  const [playing, setPlaying ] = useState(false);\n  const [startTime, setTime ] = useState(null);\n  const [elapsedTime, setElapsedTime ] = useState(0);\n  const [timerInterval, setTimerInterval ] = useState(null);\n\n  useEffect(() => {\n    // Enable pusher logging - not enabled in any environment except local\n    Pusher.logToConsole = process.env.NODE_ENV === 'development';\n\n    var pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n      cluster: process.env.REACT_APP_PUSHER_CLUSTER\n    });\n\n    var channel = pusher.subscribe('my-channel');\n    channel.bind('my-event', function(data) {\n      alert(JSON.stringify(data));\n    });\n\n    return () => {\n      pusher.unsubscribe('my-channel');\n      channel.unbind('new-comment');\n    };\n  }, []);\n\n  const handleMainAction = () => {\n    if (!playing) {\n      setTime(Date.now() - elapsedTime);\n    } else {\n      clearInterval(timerInterval);\n    }\n\n    setPlaying(!playing);\n  };\n\n  useEffect(() => {\n    // With react hooks, we can't set a callback after\n    // calling setState on a state variable. To get around this,\n    // we setup an effect that triggers when startTime is changed\n    if (startTime === null) {\n      clearInterval(timerInterval);\n      setTimerInterval(null);\n      setElapsedTime(0);\n    } else {\n      const interval = setInterval(function(){\n        if (startTime === null) {\n          setElapsedTime(0);\n        } else {\n          setElapsedTime(Date.now() - startTime);\n        }\n      }, 10);\n      setTimerInterval(interval);\n    }\n  }, [startTime]); // eslint-disable-line\n\n  const handleReset = () => {\n    setTime(null);\n    setPlaying(false);\n  };\n\n  return (\n    <div>\n      <div className='' >\n        <h1 className='is-size-1 mb-5'>\n          My Workouts\n        </h1>\n\n        <div className='buttons'>\n          <LockScreen />\n          <FullScreen />\n        </div>\n\n        <div className='box has-text-centered is-flex is-flex-direction-column is-align-items-center'>\n          <h2 className='is-size-2 mb-3'>Stopwatch</h2>\n          <div className='stopwatch-circle circle is-flex is-justify-content-center is-align-items-center'>\n            <span className='time is-size-2' id='display'>\n              {elapsedTime ? timeToString(elapsedTime) : '00:00:00'}\n            </span>\n          </div>\n\n          <div className='mt-3 is-flex is-justify-content-space-between'>\n            <img\n              className='is-clickable mr-5'\n              tabIndex={0}\n              id='main-action-button'\n              alt={playing ? 'pause stopwatch' : 'start stopwatch'}\n              src={playing ? pauseButtonSrc : playButtonSrc}\n              onClick={handleMainAction}\n              onKeyUp={(e) => e.key === 'Enter' && handleMainAction()}\n            />\n\n            <img\n              className='is-clickable'\n              tabIndex={0}\n              id='reset-button'\n              alt='reset stopwatch'\n              src={resetButtonSrc}\n              onClick={handleReset}\n              onKeyUp={(e) => e.key === 'Enter' && handleReset()}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Workouts;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useAuthState } from '../Context';\n\nconst AppRoute = ({ component: Component, path, isPrivate, ...rest }) => {\n  const { email } = useAuthState();\n  return (\n    <Route\n      path={path}\n      render={props =>\n        isPrivate && !Boolean(email) ? (\n          <Redirect to={{ pathname: '/entrance' }} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n      {...rest}\n    />\n  )\n}\n\nexport default AppRoute;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useAuthState } from '../Context';\n\nconst Nav = () => {\n  const { email, updateAvailable } = useAuthState();\n\n  return (\n    <nav className='navbar is-light' role='navigation' aria-label='main navigation'>\n      <div className='navbar-brand'>\n        <div className='has-text-primary is-size-3 p-2'>\n          DualTrack\n        </div>\n\n        <div role='button' className='navbar-burger' aria-label='menu' aria-expanded='false' data-target='navbar-menu'>\n          <span aria-hidden='true'></span>\n          <span aria-hidden='true'></span>\n          <span aria-hidden='true'></span>\n        </div>\n      </div>\n\n      <div id='navbar-menu' className='navbar-menu'>\n        <div className='navbar-start'>\n          {Boolean(email) && (\n            <>\n              <NavLink to='/dashboard' className='navbar-item' activeClassName='is-active'>Dashboard</NavLink>\n              <NavLink to='/workouts' className='navbar-item' activeClassName='is-active'>Workouts</NavLink>\n              <NavLink to='/settings' className='navbar-item' activeClassName='is-active'>\n                Settings\n                {updateAvailable && <div className='dot ml-1 has-background-primary'></div>}\n              </NavLink>\n            </>\n          )}\n        </div>\n\n        <div className='navbar-end'>\n          <div className='navbar-item'>\n            <div className='buttons'>\n              {!Boolean(email) && (\n                <NavLink to='/entrance' className='button is-light' activeClassName='is-active'>Login</NavLink>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { useAuthDispatch, useAuthState } from '../Context';\n\nconst NotificationContainer = () => {\n  const dispatch = useAuthDispatch();\n  const { notification } = useAuthState();\n  if (notification === null) return null;\n\n  const HandleClick = () => {\n    dispatch({ type: 'TOGGLE_NOTIFICATION', notification: null });\n  }\n\n  return (\n    <div className={`notification is-${notification.type} is-light is-flex is-align-items-center`}>\n      <div\n        className='delete is-clickable is-size-3'\n        onClick={HandleClick}\n        dangerouslySetInnerHTML={{ __html: '&#215;' }}\n      />\n      {notification.text}\n    </div>\n  );\n}\n\nexport default NotificationContainer;\n","import React from 'react';\nimport './App.scss';\nimport './Styles/General.css';\nimport { Switch } from 'react-router-dom';\nimport { addPwaUpdateListener } from 'pwa-helper-components';\n\nimport routes from './Config/routes.js';\nimport { useAuthDispatch } from './Context';\nimport AppRoute from './Components/AppRoute';\nimport Nav from './Components/Nav';\nimport NotificationContainer from './Components/NotificationContainer';\n\nfunction App() {\n  const dispatch = useAuthDispatch();\n  addPwaUpdateListener((isUpdateAvailable) => {\n    dispatch({ type: 'TOGGLE_UPDATE_AVAILABLE', updateAvailable: isUpdateAvailable });\n  });\n\n  return (\n    <>\n      <div id='app-container'>\n        <Nav />\n        <NotificationContainer />\n\n        <div className='container is-widescreen p-5'>\n          <Switch>\n            {routes.map((route, index) => (\n              <AppRoute\n                exact\n                key={index}\n                {...route}\n              />\n            ))}\n          </Switch>\n        </div>\n      </div>\n\n      <footer className='has-background-white-ter'>\n        <div className='content has-text-centered pt-3 pb-3'>\n          <div>\n            Icons made by <a href='https://www.flaticon.com/authors/srip' title='srip'>srip</a> from <a href='https://www.flaticon.com/' title='Flaticon'>www.flaticon.com</a>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  let installingWorker;\n  // Documentation: https://deanhume.com/displaying-a-new-version-available-progressive-web-app\n\n  handleUpdate();\n\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      console.log('[Registering SW]: ', registration);\n      if (registration.waiting && registration.waiting.state === 'installed') {\n        // The service worker is installed and we just need to activate it\n        // Case handled by the settings page update interface\n        // Uncomment the following line to force an update\n      }\n\n      registration.onupdatefound = () => {\n        installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, we know there is a new version ready\n              // Uncomment the following line to force an update\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nasync function handleUpdate() {\n  if ('serviceWorker' in navigator) {\n    let refreshing;\n\n    // https://dev.to/thepassle/on-pwa-update-patterns-4fgm\n    // check to see if there is a current active service worker\n    const oldRegistration = await navigator.serviceWorker.getRegistration();\n    const oldSw = oldRegistration && oldRegistration.active;\n    const olsSwState = oldSw && oldSw.state;\n\n    navigator.serviceWorker.addEventListener('controllerchange', async () => {\n      if (refreshing) return;\n\n      // when the controllerchange event has fired, we get the new service worker\n      const newRegistration = await navigator.serviceWorker.getRegistration();\n      const newSw = newRegistration && newRegistration.active;\n      const newSwState = newSw && newSw.state;\n\n      // if there was already an old activated service worker, and a new activating service worker, do the reload\n      if (olsSwState === 'activated' && newSwState === 'activating') {\n        refreshing = true;\n        window.location.reload();\n      }\n    });\n  }\n}\n\n//////////////////\n// LOCAL ENV ONLY!\n//////////////////\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './Context';\nimport { makeServer } from './Config/mockServer';\n\nif (process.env.NODE_ENV === 'development') {\n  makeServer({ environment: 'development' });\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <HashRouter hashType='slash'>\n        <App />\n      </HashRouter>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}