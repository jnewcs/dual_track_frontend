{"version":3,"sources":["Pages/Workouts/LockScreen.jsx","Pages/Workouts/FullScreen.jsx","Config/utils.js","Components/Stopwatch.jsx","Pages/Workouts/ChatBubble.jsx","Pages/Workouts/index.jsx"],"names":["LockScreen","useState","screenLock","setScreenLock","locked","setLockedStatus","navigator","requestWakeLock","a","wakeLock","request","lock","console","error","name","message","releaseWakeLock","release","className","tabIndex","onClick","onKeyUp","e","key","FullScreen","document","fullscreenElement","inFullScreen","setScreenStatus","enterFullScreen","documentElement","requestFullscreen","leaveFullScreen","exitFullscreen","timeToString","time","diffInHrs","diffInMin","Math","floor","mm","diffInSec","ss","diffInMs","ms","formattedMM","toString","padStart","formattedSS","formattedMS","StopWatch","showReset","onPlayCallback","onStopCallback","playing","setPlaying","startTime","setTime","elapsedTime","setElapsedTime","timerInterval","setTimerInterval","handleMainAction","clearInterval","Date","now","useEffect","interval","setInterval","handleReset","id","alt","src","ChatBubble","channel","chatHistory","setChatHistory","open","setOpenStatus","unreadMessage","setUnreadStatus","setMessage","length","lastElement","getElementById","scrollIntoView","escFunction","keyCode","addEventListener","removeEventListener","openChat","body","classList","remove","add","closeChat","sendMessage","formattedMessage","sender","timestamp","trigger","dangerouslySetInnerHTML","__html","map","chat","index","type","placeholder","value","onChange","target","disabled","Workouts","history","setState","state","Pusher","logToConsole","process","pusher","cluster","authEndpoint","ROOT_PROD_URL","auth","headers","localStorage","getItem","subscribe","this","bind","data","unbind","unsubscribe","Component"],"mappings":"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","file":"static/js/4.099b2df1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst LockScreen = () => {\n  const [screenLock, setScreenLock] = useState(null);\n  const [locked, setLockedStatus] = useState(false);\n\n  if (!('wakeLock' in navigator)) {\n    // Screen Wake Lock API is not supported ðŸŽ‰\n    // - Need to be running the server in HTTPS mode\n    return null;\n  }\n\n  // Function that attempts to request a screen wake lock.\n  const requestWakeLock = async () => {\n    try {\n      const lock = await navigator.wakeLock.request('screen');\n      setScreenLock(lock);\n      setLockedStatus(true);\n    } catch (err) {\n      console.error(`${err.name}, ${err.message}`);\n    }\n  };\n  const releaseWakeLock = () => {\n    if (screenLock) screenLock.release();\n\n    setScreenLock(null);\n    setLockedStatus(false);\n  };\n\n  return (\n    <>\n      {locked ? (\n        <div className='button' tabIndex='0' onClick={releaseWakeLock} onKeyUp={(e) => e.key === 'Enter' && releaseWakeLock()}>\n          Unlock Page\n        </div>\n      ) : (\n        <div className='button' tabIndex='0' onClick={requestWakeLock} onKeyUp={(e) => e.key === 'Enter' && requestWakeLock()}>\n          Lock Page\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default LockScreen;\n","import React, { useState } from 'react';\n\nconst FullScreen = () => {\n  const [inFullScreen, setScreenStatus] = useState(!!document.fullscreenElement);\n\n  const enterFullScreen = () => {\n    document.documentElement.requestFullscreen();\n    setScreenStatus(true);\n  };\n  const leaveFullScreen = () => {\n    document.exitFullscreen();\n    setScreenStatus(false);\n  };\n\n  return (\n    <>\n      {inFullScreen ? (\n        <div className='button' tabIndex='0' onClick={leaveFullScreen} onKeyUp={(e) => e.key === 'Enter' && leaveFullScreen()}>\n          Leave Full Screen\n        </div>\n      ) : (\n        <div className='button' tabIndex='0' onClick={enterFullScreen} onKeyUp={(e) => e.key === 'Enter' && enterFullScreen()}>\n          Enter Full Screen\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FullScreen;\n","// SVG Icon Links\nexport const pauseButtonSrc = 'https://res.cloudinary.com/https-tinloof-com/image/upload/v1593360448/blog/time-in-js/pause-button_pinhpy.svg';\nexport const playButtonSrc = 'https://res.cloudinary.com/https-tinloof-com/image/upload/v1593360448/blog/time-in-js/play-button_opkxmt.svg';\nexport const resetButtonSrc = 'https://res.cloudinary.com/https-tinloof-com/image/upload/v1593360448/blog/time-in-js/reset-button_mdv6wf.svg';\n\n// Convert time to a format of hours, minutes, seconds, and milliseconds\nexport function timeToString(time) {\n  let diffInHrs = time / 3600000;\n  let hh = Math.floor(diffInHrs);\n\n  let diffInMin = (diffInHrs - hh) * 60;\n  let mm = Math.floor(diffInMin);\n\n  let diffInSec = (diffInMin - mm) * 60;\n  let ss = Math.floor(diffInSec);\n\n  let diffInMs = (diffInSec - ss) * 100;\n  let ms = Math.floor(diffInMs);\n\n  let formattedMM = mm.toString().padStart(2, \"0\");\n  let formattedSS = ss.toString().padStart(2, \"0\");\n  let formattedMS = ms.toString().padStart(2, \"0\");\n\n  return `${formattedMM}:${formattedSS}:${formattedMS}`;\n}\n","import React, { useEffect, useState } from 'react';\nimport { pauseButtonSrc, playButtonSrc, resetButtonSrc, timeToString } from '../Config/utils';\n\nconst StopWatch = ({ showReset = true, onPlayCallback = () => {}, onStopCallback = () => {} }) => {\n  const [playing, setPlaying ] = useState(false);\n  const [startTime, setTime ] = useState(null);\n  const [elapsedTime, setElapsedTime ] = useState(0);\n  const [timerInterval, setTimerInterval ] = useState(null);\n\n  const handleMainAction = () => {\n    if (!playing) {\n      setTime(Date.now() - elapsedTime);\n      onPlayCallback();\n    } else {\n      clearInterval(timerInterval);\n      onStopCallback();\n    }\n\n    setPlaying(!playing);\n  };\n\n  useEffect(() => {\n    // With react hooks, we can't set a callback after\n    // calling setState on a state variable. To get around this,\n    // we setup an effect that triggers when startTime is changed\n    if (startTime === null) {\n      clearInterval(timerInterval);\n      setTimerInterval(null);\n      setElapsedTime(0);\n    } else {\n      const interval = setInterval(function(){\n        if (startTime === null) {\n          setElapsedTime(0);\n        } else {\n          setElapsedTime(Date.now() - startTime);\n        }\n      }, 10);\n      setTimerInterval(interval);\n    }\n  }, [startTime]); // eslint-disable-line\n\n  const handleReset = () => {\n    setTime(null);\n    setPlaying(false);\n  };\n\n  return (\n    <div className='box has-text-centered is-flex is-flex-direction-column is-align-items-center'>\n      <h2 className='is-size-2 mb-3'>Stopwatch</h2>\n      <div className='stopwatch-circle circle is-flex is-justify-content-center is-align-items-center'>\n        <span className='time is-size-2' id='display'>\n          {elapsedTime ? timeToString(elapsedTime) : '00:00:00'}\n        </span>\n      </div>\n\n      <div className='mt-3 is-flex is-justify-content-space-between'>\n        <img\n          className='is-clickable mr-5'\n          tabIndex={0}\n          id='main-action-button'\n          alt={playing ? 'pause stopwatch' : 'start stopwatch'}\n          src={playing ? pauseButtonSrc : playButtonSrc}\n          onClick={handleMainAction}\n          onKeyUp={(e) => e.key === 'Enter' && handleMainAction()}\n        />\n\n        {showReset && (\n          <img\n            className='is-clickable'\n            tabIndex={0}\n            id='reset-button'\n            alt='reset stopwatch'\n            src={resetButtonSrc}\n            onClick={handleReset}\n            onKeyUp={(e) => e.key === 'Enter' && handleReset()}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StopWatch;\n","import React, { useState, useEffect } from 'react';\n\nconst ChatBubble = ({ channel, chatHistory, setChatHistory }) => {\n  const [open, setOpenStatus] = useState(false);\n  const [unreadMessage, setUnreadStatus] = useState(false);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (!open && chatHistory.length) {\n      setUnreadStatus(true);\n    }\n    const lastElement = document.getElementById('last-chat-element');\n    if (lastElement) {\n      lastElement.scrollIntoView();\n    }\n  }, [chatHistory, open]);\n\n  useEffect(() => {\n    const escFunction = (e) => {\n      if (e.keyCode !== 27) return;\n\n      setOpenStatus(false);\n    };\n\n    if (open) {\n      document.addEventListener('keydown', escFunction, false);\n    } else {\n      document.removeEventListener('keydown', escFunction, false);\n    }\n  }, [open]);\n\n  if (!channel) return null;\n\n  const openChat = () => {\n    if (open) {\n      document.body.classList.remove('not-vertically-scrollable');\n    } else {\n      document.body.classList.add('not-vertically-scrollable');\n    }\n\n    setOpenStatus(!open);\n  };\n  const closeChat = () => {\n    document.body.classList.remove('not-vertically-scrollable');\n    setOpenStatus(false);\n  };\n\n  const sendMessage = () => {\n    if (!message || !message.length) return;\n\n    const formattedMessage = {\n      id: chatHistory.length + 1,\n      sender: 'me',\n      message,\n      timestamp: Date.now()\n    };\n\n    // Send message to others in the channel\n    channel.trigger('client-chat-message', formattedMessage);\n    setChatHistory([ ...chatHistory, formattedMessage ]);\n\n    setMessage('');\n  };\n\n  return (\n    <>\n      <div className='button' tabIndex={0} onClick={openChat} onKeyUp={(e) => e.key === 'Enter' && openChat()}>\n        Workout Chat\n        {unreadMessage && <div className='dot ml-1 has-background-primary'></div>}\n      </div>\n\n      {open && (\n        <div className='chat-interface box has-background-link-light p-5'>\n          <div\n            tabIndex={0}\n            className='delete is-clickable is-size-3 close-chat-interface'\n            onClick={closeChat}\n            onKeyUp={(e) => e.key === 'Enter' && closeChat()}\n            dangerouslySetInnerHTML={{ __html: '&#215;' }}\n          />\n\n          <h4 className='chat-title is-size-4'>\n            Workout Chat\n          </h4>\n\n          <div className='chat-messages box mt-2 p-3'>\n            <div className='is-full-width is-flex is-justify-content-center mb-1'>\n              <div className='tag is-dark from-me-message'>This is the beginning of your conversation history</div>\n            </div>\n\n            {chatHistory.map((chat, index) => {\n              if (chat.sender === 'me') {\n                return (\n                  <div className='is-full-width is-flex is-justify-content-flex-end mb-1' key={`chat-me-${index}`}>\n                    <div className='tag is-link from-me-message is-pulled-right'>{chat.message}</div>\n                  </div>\n                );\n              }\n\n              return (\n                <div className='mb-1' key={`chat-others-${index}`}>\n                  <div className='tag is-light to-me-message'>{chat.message}</div>\n                </div>\n              );\n            })}\n\n            <div id='last-chat-element'></div>\n          </div>\n\n          <div className='chat-send-box box mt-2 p-3'>\n            <div className='is-flex'>\n              <input\n                className='input is-normal'\n                type='text'\n                placeholder='Enter your message'\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                onKeyUp={(e) => e.key === 'Enter' && sendMessage()}\n              />\n              <div className='button is-primary ml-2' tabIndex={0} onClick={sendMessage} disabled={!message || !message.length}>\n                Send\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ChatBubble;\n","import React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport { ROOT_PROD_URL } from '../../Context/actions';\nimport LockScreen from './LockScreen';\nimport FullScreen from './FullScreen';\nimport StopWatch from '../../Components/Stopwatch';\nimport ChatBubble from './ChatBubble';\n\nclass Workouts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chatHistory: []\n    };\n\n    // Enable pusher logging - not enabled in any environment except local\n    const isLocal = process.env.NODE_ENV === 'development';\n    Pusher.logToConsole = isLocal;\n\n    this.pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n      cluster: process.env.REACT_APP_PUSHER_CLUSTER,\n      authEndpoint: isLocal ? `http://localhost:4000/pusher/auth` :`${ROOT_PROD_URL}/pusher/auth`,\n      auth: {\n        headers: { 'Authorization': localStorage.getItem('currentUserToken') || '' }\n      }\n    });\n\n    // TODO: Need to replace environment variable with value from the actual DB\n    this.channel = this.pusher.subscribe(`private-workoutChannel-${process.env.REACT_APP_WORKOUT_UID}`);\n  }\n\n  componentDidMount() {\n    this.channel.bind('client-chat-message', (data) => {\n      this.setState({\n        chatHistory: [\n          ...this.state.chatHistory,\n          {\n            ...data,\n            sender: 'other'\n          }\n        ]\n      });\n    }, this);\n  }\n\n  componentWillUnmount() {\n    if (this.channel) {\n      this.channel.unbind('client-chat-message');\n    }\n\n    this.pusher.unsubscribe(`private-workoutChannel-${process.env.REACT_APP_WORKOUT_UID}`);\n  }\n\n  setChatHistory = (history) => {\n    this.setState({ chatHistory: history });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='' >\n          <h1 className='is-size-1 mb-5'>\n            My Workouts\n          </h1>\n\n          <div className='buttons'>\n            <LockScreen />\n            <FullScreen />\n          </div>\n\n          <StopWatch />\n\n          <ChatBubble\n            channel={this.channel}\n            chatHistory={this.state.chatHistory}\n            setChatHistory={this.setChatHistory}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Workouts;\n"],"sourceRoot":""}