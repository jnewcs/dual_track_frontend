{"version":3,"sources":["Components/Show.jsx","Config/utils.js","Pages/Workout/PreviousSessions.jsx","Pages/Workout/LockScreen.jsx","Pages/Workout/FullScreen.jsx","Pages/Workout/ChatMembers.jsx","Pages/Workout/ChatInterface.jsx","Pages/Workout/ChatBubble.jsx","Components/Stopwatch.jsx","Pages/Workout/SegmentUtils.js","Pages/Workout/SegmentActions.jsx","Pages/Workout/Segment.jsx","Pages/Workout/Segments.jsx","Pages/Workout/WorkoutDetail.jsx","Pages/Workout/index.jsx"],"names":["Show","condition","children","timeToString","time","diffInHrs","diffInMin","Math","floor","mm","diffInSec","ss","diffInMs","ms","formattedMM","toString","padStart","formattedSS","formattedMS","generateUUID","uuidv4","PreviousSessions","previousSessions","localStorage","getItem","length","className","LockScreen","useState","screenLock","setScreenLock","locked","setLockedStatus","navigator","requestWakeLock","a","wakeLock","request","lock","console","error","name","message","releaseWakeLock","release","tabIndex","onClick","onKeyUp","e","key","FullScreen","document","fullscreenElement","inFullScreen","setScreenStatus","enterFullScreen","documentElement","requestFullscreen","leaveFullScreen","exitFullscreen","ChatMembers","members","email","useAuthState","count","Object","values","map","member","tagType","ChatInterface","open","chatHistory","closeChat","setMessage","sendMessage","dangerouslySetInnerHTML","__html","chat","index","sender","id","type","placeholder","value","onChange","target","disabled","ChatBubble","showChat","channel","setChatHistory","unreadMessage","setUnreadStatus","setOpenStatus","useEffect","lastElement","getElementById","scrollIntoView","escFunction","keyCode","openChat","addEventListener","removeEventListener","body","classList","remove","add","formattedMessage","timestamp","Date","now","trigger","StopWatch","showFinish","onPlayCallback","onStopCallback","onFinishCallback","playing","setPlaying","startTime","setTime","elapsedTime","setElapsedTime","timerInterval","setTimerInterval","handleMainAction","clearInterval","interval","setInterval","handleFinish","alt","src","grabSegmentNotificationClass","finishTime","timeGoal","difference","SegmentActions","workoutStarted","startClick","showStopwatch","Segment","segment","segmentLength","toggleStopwatch","setFinishTime","display_length","time_goal","rest","description","Segments","selectedWorkout","segments","identifier","WorkoutDetail","props","history","setState","status","startWorkoutWrapper","startWorkout","state","Pusher","logToConsole","process","pusher","cluster","authEndpoint","auth","headers","subscribe","this","bind","info","newMembers","keys","filter","reduce","obj","data","mirrorWorkout","unsubscribe","unbind","disconnect","showStartWorkoutButton","Component","Workout","match","params","loading","dispatch","useAuthDispatch","activeTab","setActiveTab","sessionFromLS","identifierFromLS","workoutStartedInitial","setWorkoutStatus","sessionIdenitiferInitial","liveSessionIdentifier","setSessionIdentifier","setWorkoutData","uuid","newIdentifier","setItem","getWorkout","Loader","aria-label","to","undefined"],"mappings":"2HAMeA,IANF,SAAC,GAAoC,IAAD,IAAjCC,iBAAiC,SAAfC,EAAe,EAAfA,SAChC,OAAKD,EAEEC,EAFgB,O,yFCOlB,SAASC,EAAaC,GAC3B,IAAIC,EAAYD,EAAO,KAGnBE,EAA+B,IAAlBD,EAFRE,KAAKC,MAAMH,IAGhBI,EAAKF,KAAKC,MAAMF,GAEhBI,EAA+B,IAAlBJ,EAAYG,GACzBE,EAAKJ,KAAKC,MAAME,GAEhBE,EAA8B,KAAlBF,EAAYC,GACxBE,EAAKN,KAAKC,MAAMI,GAEhBE,EAAcL,EAAGM,WAAWC,SAAS,EAAG,KACxCC,EAAcN,EAAGI,WAAWC,SAAS,EAAG,KACxCE,EAAcL,EAAGE,WAAWC,SAAS,EAAG,KAE5C,MAAM,GAAN,OAAUF,EAAV,YAAyBG,EAAzB,YAAwCC,GAGnC,SAASC,IACd,OAAOC,c,0BCVMC,EAjBU,WACvB,IAAMC,EAAmBC,aAAaC,QAAQ,qBAAuB,GACrE,OAAKF,GAAqBA,EAAiBG,OASzC,iEAPE,qBAAKC,UAAU,8BAAf,mD,gGCsCSC,EA1CI,WAAO,IAAD,EACaC,mBAAS,MADtB,mBAChBC,EADgB,KACJC,EADI,OAEWF,oBAAS,GAFpB,mBAEhBG,EAFgB,KAERC,EAFQ,KAIvB,KAAM,aAAcC,WAGlB,OAAO,KAIT,IAAMC,EAAe,uCAAG,4BAAAC,EAAA,+EAEDF,UAAUG,SAASC,QAAQ,UAF1B,OAEdC,EAFc,OAGpBR,EAAcQ,GACdN,GAAgB,GAJI,gDAMpBO,QAAQC,MAAR,UAAiB,KAAIC,KAArB,aAA8B,KAAIC,UANd,yDAAH,qDASfC,EAAkB,WAClBd,GAAYA,EAAWe,UAE3Bd,EAAc,MACdE,GAAgB,IAGlB,OACE,mCACGD,EACC,qBAAKL,UAAU,SAASmB,SAAS,IAAIC,QAASH,EAAiBI,QAAS,SAACC,GAAD,MAAiB,UAAVA,EAAEC,KAAmBN,KAApG,yBAIA,qBAAKjB,UAAU,SAASmB,SAAS,IAAIC,QAASZ,EAAiBa,QAAS,SAACC,GAAD,MAAiB,UAAVA,EAAEC,KAAmBf,KAApG,0BCPOgB,EA3BI,WAAO,IAAD,EACiBtB,qBAAWuB,SAASC,mBADrC,mBAChBC,EADgB,KACFC,EADE,KAGjBC,EAAkB,WACtBJ,SAASK,gBAAgBC,oBACzBH,GAAgB,IAEZI,EAAkB,WACtBP,SAASQ,iBACTL,GAAgB,IAGlB,OACE,mCACGD,EACC,qBAAK3B,UAAU,SAASmB,SAAS,IAAIC,QAASY,EAAiBX,QAAS,SAACC,GAAD,MAAiB,UAAVA,EAAEC,KAAmBS,KAApG,+BAIA,qBAAKhC,UAAU,SAASmB,SAAS,IAAIC,QAASS,EAAiBR,QAAS,SAACC,GAAD,MAAiB,UAAVA,EAAEC,KAAmBM,KAApG,kCCFOK,EAhBK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,EAAUC,cAAVD,MACR,OAAKD,GAAWA,EAAQG,MAAQ,EAAU,KAGxC,8BACGC,OAAOC,OAAOL,GAASM,KAAI,SAAAC,GAC1B,IAAMC,EAAUD,EAAON,QAAUA,EAAQ,UAAY,WACrD,OACE,qBAAwBpC,UAAS,wBAAmB2C,GAApD,SAAgED,EAAON,OAA7DM,EAAON,aCuDZQ,EA/DO,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,KAAMV,EAAwE,EAAxEA,QAASW,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,UAAW/B,EAAuC,EAAvCA,QAASgC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAC3Eb,EAAUC,cAAVD,MAER,OAAKS,IAASV,GAAWI,OAAOC,OAAOL,GAASpC,OAAS,EAChD,KAIP,sBAAKC,UAAU,mDAAf,UACE,qBACEmB,SAAU,EACVnB,UAAU,qDACVoB,QAAS2B,EACT1B,QAAS,SAACC,GAAD,MAAiB,UAAVA,EAAEC,KAAmBwB,KACrCG,wBAAyB,CAAEC,OAAQ,YAGrC,cAAC,EAAD,CAAahB,QAASA,IAEtB,sBAAKnC,UAAU,6BAAf,UACE,qBAAKA,UAAU,uDAAf,SACE,qBAAKA,UAAU,cAAf,kEAGD8C,EAAYL,KAAI,SAACW,EAAMC,GACtB,OAAID,EAAKE,SAAWlB,EAEhB,qBAAKpC,UAAU,yDAAf,SACE,qBAAKA,UAAU,wDAAf,SAAwEoD,EAAKpC,WAD/E,kBAAwFqC,IAO1F,qBAAKrD,UAAU,OAAf,SACE,qBAAKA,UAAU,uCAAf,SAAuDoD,EAAKpC,WAD9D,sBAA0CqC,OAM9C,qBAAKE,GAAG,yBAGV,qBAAKvD,UAAU,kCAAf,SACE,sBAAKA,UAAU,UAAf,UACE,uBACEA,UAAU,kBACVwD,KAAK,OACLC,YAAY,qBACZC,MAAO1C,EACP2C,SAAU,SAACrC,GAAD,OAAO0B,EAAW1B,EAAEsC,OAAOF,QACrCrC,QAAS,SAACC,GAAD,MAAiB,UAAVA,EAAEC,KAAmB0B,OAGvC,qBAAKjD,UAAU,yBAAyBmB,SAAU,EAAGC,QAAS6B,EAAaY,UAAW7C,IAAYA,EAAQjB,OAA1G,2BC8BK+D,EApFI,SAAC,GAAiG,IAA/FC,EAA8F,EAA9FA,SAAUC,EAAoF,EAApFA,QAASlB,EAA2E,EAA3EA,YAAamB,EAA8D,EAA9DA,eAAgBC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,gBAAiBhC,EAAc,EAAdA,QAAc,EACpFjC,oBAAS,GAD2E,mBAC3G2C,EAD2G,KACrGuB,EADqG,OAEpFlE,mBAAS,IAF2E,mBAE3Gc,EAF2G,KAElGgC,EAFkG,KAG1GZ,EAAUC,cAAVD,MAuBR,GArBAiC,qBAAU,WACR,IAAMC,EAAc7C,SAAS8C,eAAe,qBACxCD,GACFA,EAAYE,mBAEb,CAAC1B,EAAaD,IAEjBwB,qBAAU,WACR,IAAMI,EAAc,SAACnD,GACD,KAAdA,EAAEoD,SAENC,GAAS,IAGP9B,EACFpB,SAASmD,iBAAiB,UAAWH,GAAa,GAElDhD,SAASoD,oBAAoB,UAAWJ,GAAa,KAEtD,CAAC5B,KAECmB,IAAYD,EAAU,OAAO,KAElC,IAAMY,EAAW,WACX9B,EACFpB,SAASqD,KAAKC,UAAUC,OAAO,8BAE/Bb,GAAgB,GAChB1C,SAASqD,KAAKC,UAAUE,IAAI,8BAG9Bb,GAAevB,IAsBjB,OACE,qCACE,yBACE7C,UAAU,SACVmB,SAAU,EACVC,QAASuD,EACTd,SAAUtB,OAAOC,OAAOL,GAASpC,OAAS,EAC1CsB,QAAS,SAACC,GAAD,MAAiB,UAAVA,EAAEC,KAAmBoD,KALvC,yBAQGT,GAAiB,qBAAKlE,UAAU,uCAGnC,cAAC,EAAD,CACE6C,KAAMA,EACNV,QAASA,EACTW,YAAaA,EACbC,UApCY,WAAQ4B,GAAS,IAqC7B3D,QAASA,EACTgC,WAAYA,EACZC,YArCc,WAClB,GAAKjC,GAAYA,EAAQjB,OAAzB,CAEA,IAAMmF,EAAmB,CACvB3B,GAAIT,EAAY/C,OAAS,EACzBuD,OAAQlB,EACRpB,UACAmE,UAAWC,KAAKC,OAIlBrB,EAAQsB,QAAQ,sBAAuBJ,GACvCjB,EAAe,GAAD,mBAAMnB,GAAN,CAAmBoC,KAEjClC,EAAW,YC6BAuC,EArFG,SAAC,GAA8G,IAAD,IAA3GC,kBAA2G,aAAxFC,sBAAwF,MAAvE,aAAuE,MAA7DC,sBAA6D,MAA5C,aAA4C,MAAlCC,wBAAkC,MAAf,aAAe,IAC/FzF,oBAAS,GADsF,mBACvH0F,EADuH,KAC9GC,EAD8G,OAEhG3F,mBAAS,MAFuF,mBAEvH4F,EAFuH,KAE5GC,EAF4G,OAGvF7F,mBAAS,GAH8E,mBAGvH8F,EAHuH,KAG1GC,EAH0G,OAInF/F,mBAAS,MAJ0E,mBAIvHgG,EAJuH,KAIxGC,EAJwG,KAMxHC,EAAmB,WAClBR,GAIHS,cAAcH,GACdR,MAJAK,EAAQX,KAAKC,MAAQW,GACrBP,KAMFI,GAAYD,IAGdvB,qBAAU,WAER+B,MACC,IAEH/B,qBAAU,WAIR,GAAkB,OAAdyB,EACFO,cAAcH,GACdC,EAAiB,MACjBF,EAAe,OACV,CACL,IAAMK,EAAWC,aAAY,WAEzBN,EADgB,OAAdH,EACa,EAEAV,KAAKC,MAAQS,KAE7B,IACHK,EAAiBG,MAElB,CAACR,IAEJ,IAAMU,EAAe,WACfZ,IACFQ,IACAT,EAAiBK,KAIrB,OACE,sBAAKhG,UAAU,2EAAf,UACE,qBAAKA,UAAU,kFAAf,SACE,sBAAMA,UAAU,iBAAiBuD,GAAG,UAApC,SACGyC,EAAcvH,EAAauH,GAAe,eAI/C,sBAAKhG,UAAU,sEAAf,UACE,qBACEA,UAAU,eACVmB,SAAU,EACVoC,GAAG,qBACHkD,IAAKb,EAAU,kBAAoB,kBACnCc,IAAKd,EPhEe,gHACD,+GOgEnBxE,QAASgF,EACT/E,QAAS,SAACC,GAAD,MAAiB,UAAVA,EAAEC,KAAmB6E,OAGtCZ,GAAcI,GACb,qBACE5F,UAAU,wBACVmB,SAAU,EACVoC,GAAG,eACHnC,QAASoF,EACTnF,QAAS,SAACC,GAAD,MAAiB,UAAVA,EAAEC,KAAmBiF,KALvC,2BCzEGG,EAA+B,SAACC,EAAYC,GACvD,IACMC,EAAaD,EADSD,EAAa,IAEzC,OAAIE,GAAc,EAAY,yBAC1BA,GAAc,EAAY,0BAEvB,2BCyBMC,EA1BQ,SAAC,GAA2F,IAAzFC,EAAwF,EAAxFA,eAAgBJ,EAAwE,EAAxEA,WAAYC,EAA4D,EAA5DA,SAAUI,EAAkD,EAAlDA,WAAYtB,EAAsC,EAAtCA,iBAAkBuB,EAAoB,EAApBA,cAC5F,OAAKF,EAEDJ,EAEA,sBAAK5G,UAAW2G,EAA6BC,EAAYC,GAAzD,UACE,mBAAG7G,UAAU,YAAb,yBACA,uBACCvB,EAAamI,MAMlB,sCACIM,GACA,qBAAK/F,SAAU,EAAGnB,UAAU,8BAA8BoB,QAAS6F,EAAnE,mBAKDC,GAAiB,cAAC,EAAD,CAAWvB,iBAAkBA,OApBvB,MCwDfwB,EA3DC,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,cAAehE,EAA4B,EAA5BA,MAAO2D,EAAqB,EAArBA,eAAqB,EAC5B9G,oBAAS,GADmB,mBAC9DgH,EAD8D,KAC/CI,EAD+C,OAEjCpH,mBAAS,MAFwB,mBAE9D0G,EAF8D,KAElDW,EAFkD,KAerE,OACE,qBAAKvH,UAAU,sBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,mBAAf,UACGqD,EAAQ,EADX,MACkBgE,KAGlB,qBAAKrH,UAAU,oBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAGA,UAAU,YAAb,UAA0BoH,EAAQI,eAAlC,WACA,uBACCJ,EAAQK,UAHX,cAMA,sBAAKzH,UAAU,iBAAf,UACE,mBAAGA,UAAU,YAAb,kBACA,uBACCoH,EAAQM,KAHX,iBAOF,cAAC,EAAD,CACEd,WAAYA,EACZC,SAAUO,EAAQK,UAClBP,cAAeA,EACfD,WAtCO,WACjBK,GAAiBJ,IAsCPvB,iBApCa,SAACjH,GACxB4I,GAAgB,GAChBC,EAAc7I,IAmCJsI,eAAgBA,IAGlB,uBAEA,4BACGI,EAAQO,yBCjBRC,EAjCE,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,gBAAiBb,EAAqB,EAArBA,eACnC,IAAKa,EAAgBC,SAAS/H,OAC5B,OACE,mBAAGC,UAAU,OAAb,4DAMJ,IAAM8H,EAAWD,EAAgBC,SAC3BT,EAAgBS,EAAS/H,OAE/B,OACE,qCACE,sBAAKC,UAAU,iBAAf,UACGqH,EADH,UAC2C,IAAlBA,EAAsB,UAAY,cAG3D,qBAAKrH,UAAU,mBAAf,SACG8H,EAASrF,KAAI,SAAC2E,EAAS/D,GAAV,OACZ,cAAC,EAAD,CAEE+D,QAASA,EACTC,cAAeA,EACfhE,MAAOA,EACP2D,eAAgBA,GAJXI,EAAQW,qBCiHVC,E,kDA/Hb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgFRhE,eAAiB,SAACiE,GAChB,EAAKC,SAAS,CAAErF,YAAaoF,KAlFZ,EAqFnB/D,gBAAkB,SAACiE,GACjB,EAAKD,SAAS,CAAEjE,cAAekE,KAtFd,EA+FnBC,oBAAsB,WACpB,EAAKJ,MAAMK,aAAa,EAAKtE,UA9F7B,EAAKuE,MAAQ,CACXzF,YAAa,GACboB,eAAe,EACf/B,QAAS,GACT4B,UAAU,GAIZyE,IAAOC,cAAeC,EAEtB,EAAKC,OAAS,IAAIH,IAAOE,uBAAkC,CACzDE,QAASF,MACTG,aAAa,GAAD,OAAKH,8CAAL,gBACZI,KAAM,CACJC,QAAS,CAAE,cAAiBlJ,aAAaC,QAAQ,qBAAuB,OAI5E,EAAKkE,QAAU,EAAK2E,OAAOK,UAAZ,kCAAiD,EAAKjB,aApBpD,E,4CAuBnB,WAEE,OADuBkB,KAAKhB,MAAMJ,gBAA1BE,a,+BAIV,WAAqB,IAAD,OAClBkB,KAAKjF,QAAQkF,KAAK,iCAAiC,SAASC,GAC1DF,KAAKd,SAAS,CAAEhG,QAASgH,EAAKhH,QAAS4B,UAAU,MAChDkF,MAEHA,KAAKjF,QAAQkF,KAAK,uBAAuB,SAASxG,GAChD,IAAM0G,EAAU,2BACXH,KAAKV,MAAMpG,SADA,kBAEbO,EAAOa,GAAKb,EAAOyG,OAEtBF,KAAKd,SAAS,CAAEhG,QAASiH,MACxBH,MAEHA,KAAKjF,QAAQkF,KAAK,yBAAyB,SAASxG,GAAS,IAAD,OACpD0G,EAAa7G,OAAO8G,KAAKJ,KAAKV,MAAMpG,SACvCmH,QAAO,SAAA/H,GAAG,MAAI,UAAGA,KAAH,UAAgBmB,EAAOa,OACrCgG,QAAO,SAACC,EAAKjI,GAEZ,OADAiI,EAAIjI,GAAO,EAAKgH,MAAMpG,QAAQZ,GACvBiI,IACN,IAELP,KAAKd,SAAS,CAAEhG,QAASiH,MACxBH,MAEHA,KAAKjF,QAAQkF,KAAK,uBAAuB,SAACO,GACxC,EAAKtB,SAAS,CACZrF,YAAY,GAAD,mBACN,EAAKyF,MAAMzF,aADL,gBAGJ2G,KAGPvF,eAAe,MAEhB+E,MAEHA,KAAKjF,QAAQkF,KAAK,0BAA0B,SAACO,GAC3C,EAAKxB,MAAMyB,cAAcD,KACxBR,Q,kCAGL,WACEA,KAAKN,OAAOgB,YAAZ,kCAAmDV,KAAKlB,aAEpDkB,KAAKjF,SACPiF,KAAKjF,QAAQ4F,SAGfX,KAAKN,OAAOkB,aAEZpI,SAASqD,KAAKC,UAAUC,OAAO,+B,kCAWjC,WACE,OAAIiE,KAAKhB,MAAMjB,kBAENiC,KAAKhB,MAAMJ,gBAAgBC,SAAS/H,S,oBAO/C,WACE,OACE,qCACE,sBAAKC,UAAU,UAAf,UACE,cAAC1B,EAAA,EAAD,CAAMC,UAAW0K,KAAKa,uBAAtB,SACE,qBAAK3I,SAAU,EAAGnB,UAAU,oBAAoBoB,QAAS6H,KAAKZ,oBAA9D,6BAKF,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,aACErE,QAASiF,KAAKjF,QACdC,eAAgBgF,KAAKhF,eACrBE,gBAAiB8E,KAAK9E,iBAClB8E,KAAKV,WAIb,cAAC,EAAD,CAAapG,QAAS8G,KAAKV,MAAMpG,UAEjC,cAAC,EAAD,CAAU0F,gBAAiBoB,KAAKhB,MAAMJ,gBAAiBb,eAAgBiC,KAAKhB,MAAMjB,wB,GA1H9D+C,aCqGbC,UApGC,SAAC,GAAe,IACZjC,EADW,EAAZkC,MACTC,OAAUnC,WADW,EAEe1F,cAApCwF,EAFqB,EAErBA,gBAAiB/G,EAFI,EAEJA,MAAOqJ,EAFH,EAEGA,QAC1BC,EAAWC,cAHY,EAIKnK,mBAAS,WAJd,mBAItBoK,EAJsB,KAIXC,EAJW,KAMvBC,EAAgB3K,aAAaC,QAAQ,0BAA4B,KACjE2K,EAAmB5K,aAAaC,QAAQ,0BAA4B,KACpE4K,IAA0BF,GAAiBzC,IAAe0C,EARnC,EAUcvK,mBAASwK,GAVvB,mBAUtB1D,EAVsB,KAUN2D,EAVM,KAWvBC,EAA2BF,EAAwBF,EAAgB,KAX5C,EAYyBtK,mBAAS0K,GAZlC,mBAYtBC,EAZsB,KAYCC,EAZD,KAcvBC,EAAiB,SAACC,EAAMC,GAC5BpL,aAAaqL,QAAQ,wBAAyBF,GAC9CnL,aAAaqL,QAAQ,wBAAyBD,GAC9CN,GAAiB,GACjBG,EAAqBE,IAoBvB,OAJA3G,qBAAU,WACR8G,YAAWpD,EAAYqC,KACtB,CAACrC,EAAYqC,IAEZD,EACK,cAACiB,EAAA,EAAD,IACGvD,GAAoBtF,OAAO8G,KAAKxB,GAAiB9H,OAU3D,qCACE,qBAAKC,UAAU,kBAAkBqL,aAAW,cAA5C,SACE,+BACE,6BACE,cAAC,IAAD,CAASC,GAAG,YAAYtL,UAAU,GAAlC,wBAEF,oBAAIA,UAAU,YAAd,SACE,qBAAKA,UAAU,OAAf,SAAuB6H,EAAgB9G,cAK7C,cAACzC,EAAA,EAAD,CAAMC,WAAYyI,EAAlB,SACE,qBAAKhH,UAAU,iBAAf,SACE,+BACE,oBAAIA,UAAyB,YAAdsK,EAA0B,iBAAciB,EAAvD,SAEE,mBAAGvL,UAAU,MAAMoB,QAAS,kBAAMmJ,EAAa,YAA/C,uBAKF,oBAAIvK,UAAyB,aAAdsK,EAA2B,iBAAciB,EAAxD,SAEE,mBAAGvL,UAAU,MAAMoB,QAAS,kBAAMmJ,EAAa,aAA/C,wCAOR,cAACjM,EAAA,EAAD,CAAMC,UAAWyI,EAAjB,SACE,qBAAKhH,UAAU,iBAAf,6BAAqC6K,KAKxB,YAAdP,GACC,cAAC,EAAD,CACEzC,gBAAiBA,EACjBb,eAAgBA,EAChBsB,aAtEa,WAAqB,IAApBtE,EAAmB,uDAAT,KACxBgH,EAAOvL,IACbsL,EAAeC,EAAMjD,GAEjB/D,GACFA,EAAQsB,QAAQ,yBAA0B,CAAE0F,OAAMjD,gBAkE9C2B,cA9Dc,SAACD,GACrBsB,EAAetB,EAAKuB,KAAMvB,EAAK1B,eAgEd,aAAduC,GAA4B,cAAC,EAAD,OArD7B,sBAAKtK,UAAU,oBAAf,UACE,oBAAIA,UAAU,YAAd,SAA2Bc,IAC3B,cAAC,IAAD,CAASwK,GAAG,YAAYtL,UAAU,cAAlC","file":"static/js/4.057e0e49.chunk.js","sourcesContent":["const Show = ({ condition = true, children }) => {\n  if (!condition) return null;\n\n  return children;\n}\n\nexport default Show;\n","import { v4 as uuidv4 } from 'uuid';\n\n// SVG Icon Links\nexport const pauseButtonSrc = 'https://res.cloudinary.com/https-tinloof-com/image/upload/v1593360448/blog/time-in-js/pause-button_pinhpy.svg';\nexport const playButtonSrc = 'https://res.cloudinary.com/https-tinloof-com/image/upload/v1593360448/blog/time-in-js/play-button_opkxmt.svg';\nexport const resetButtonSrc = 'https://res.cloudinary.com/https-tinloof-com/image/upload/v1593360448/blog/time-in-js/reset-button_mdv6wf.svg';\n\n// Convert time to a format of hours, minutes, seconds, and milliseconds\nexport function timeToString(time) {\n  let diffInHrs = time / 3600000;\n  let hh = Math.floor(diffInHrs);\n\n  let diffInMin = (diffInHrs - hh) * 60;\n  let mm = Math.floor(diffInMin);\n\n  let diffInSec = (diffInMin - mm) * 60;\n  let ss = Math.floor(diffInSec);\n\n  let diffInMs = (diffInSec - ss) * 100;\n  let ms = Math.floor(diffInMs);\n\n  let formattedMM = mm.toString().padStart(2, \"0\");\n  let formattedSS = ss.toString().padStart(2, \"0\");\n  let formattedMS = ms.toString().padStart(2, \"0\");\n\n  return `${formattedMM}:${formattedSS}:${formattedMS}`;\n}\n\nexport function generateUUID() {\n  return uuidv4();\n}\n","import React from 'react';\n\nconst PreviousSessions = () => {\n  const previousSessions = localStorage.getItem('previousSessions') || [];\n  if (!previousSessions || !previousSessions.length) {\n    return (\n      <div className='is-size-3 has-text-centered'>\n        You have not run this workout before\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      We have previous session data!\n    </div>\n  );\n}\n\nexport default PreviousSessions;\n","import React, { useState } from 'react';\n\nconst LockScreen = () => {\n  const [screenLock, setScreenLock] = useState(null);\n  const [locked, setLockedStatus] = useState(false);\n\n  if (!('wakeLock' in navigator)) {\n    // Screen Wake Lock API is not supported 🎉\n    // - Need to be running the server in HTTPS mode\n    return null;\n  }\n\n  // Function that attempts to request a screen wake lock.\n  const requestWakeLock = async () => {\n    try {\n      const lock = await navigator.wakeLock.request('screen');\n      setScreenLock(lock);\n      setLockedStatus(true);\n    } catch (err) {\n      console.error(`${err.name}, ${err.message}`);\n    }\n  };\n  const releaseWakeLock = () => {\n    if (screenLock) screenLock.release();\n\n    setScreenLock(null);\n    setLockedStatus(false);\n  };\n\n  return (\n    <>\n      {locked ? (\n        <div className='button' tabIndex='0' onClick={releaseWakeLock} onKeyUp={(e) => e.key === 'Enter' && releaseWakeLock()}>\n          Unlock Page\n        </div>\n      ) : (\n        <div className='button' tabIndex='0' onClick={requestWakeLock} onKeyUp={(e) => e.key === 'Enter' && requestWakeLock()}>\n          Lock Page\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default LockScreen;\n","import React, { useState } from 'react';\n\nconst FullScreen = () => {\n  const [inFullScreen, setScreenStatus] = useState(!!document.fullscreenElement);\n\n  const enterFullScreen = () => {\n    document.documentElement.requestFullscreen();\n    setScreenStatus(true);\n  };\n  const leaveFullScreen = () => {\n    document.exitFullscreen();\n    setScreenStatus(false);\n  };\n\n  return (\n    <>\n      {inFullScreen ? (\n        <div className='button' tabIndex='0' onClick={leaveFullScreen} onKeyUp={(e) => e.key === 'Enter' && leaveFullScreen()}>\n          Leave Full Screen\n        </div>\n      ) : (\n        <div className='button' tabIndex='0' onClick={enterFullScreen} onKeyUp={(e) => e.key === 'Enter' && enterFullScreen()}>\n          Enter Full Screen\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FullScreen;\n","import React from 'react';\nimport { useAuthState } from '../../Context';\n\nconst ChatMembers = ({ members }) => {\n  const { email } = useAuthState();\n  if (!members || members.count < 2) return null;\n\n  return (\n    <div>\n      {Object.values(members).map(member => {\n        const tagType = member.email === email ? 'is-link' : 'is-light';\n        return (\n          <div key={member.email} className={`tag mr-1 mb-1 ${tagType}`}>{member.email}</div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ChatMembers;\n","import React from 'react';\nimport { useAuthState } from '../../Context';\nimport ChatMembers from './ChatMembers';\n\nconst ChatInterface = ({ open, members, chatHistory, closeChat, message, setMessage, sendMessage }) => {\n  const { email } = useAuthState();\n\n  if (!open || !members || Object.values(members).length < 2) {\n    return null;\n  }\n\n  return (\n    <div className='chat-interface box has-background-link-light p-5'>\n      <div\n        tabIndex={0}\n        className='delete is-clickable is-size-3 close-chat-interface'\n        onClick={closeChat}\n        onKeyUp={(e) => e.key === 'Enter' && closeChat()}\n        dangerouslySetInnerHTML={{ __html: '&#215;' }}\n      />\n\n      <ChatMembers members={members} />\n\n      <div className='chat-messages box mt-2 p-3'>\n        <div className='is-full-width is-flex is-justify-content-center mb-4'>\n          <div className='tag is-dark'>This is the beginning of your conversation history</div>\n        </div>\n\n        {chatHistory.map((chat, index) => {\n          if (chat.sender === email) {\n            return (\n              <div className='is-full-width is-flex is-justify-content-flex-end mb-2' key={`chat-me-${index}`}>\n                <div className='tag is-medium is-link from-me-message is-pulled-right'>{chat.message}</div>\n              </div>\n            );\n          }\n\n          return (\n            <div className='mb-2' key={`chat-others-${index}`}>\n              <div className='tag is-medium is-light to-me-message'>{chat.message}</div>\n            </div>\n          );\n        })}\n\n        <div id='last-chat-element'></div>\n      </div>\n\n      <div className='chat-send-box box mt-2 p-3 mb-2'>\n        <div className='is-flex'>\n          <input\n            className='input is-normal'\n            type='text'\n            placeholder='Enter your message'\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyUp={(e) => e.key === 'Enter' && sendMessage()}\n          />\n\n          <div className='button is-primary ml-2' tabIndex={0} onClick={sendMessage} disabled={!message || !message.length}>\n            Send\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n","import React, { useState, useEffect } from 'react';\nimport { useAuthState } from '../../Context';\nimport ChatInterface from './ChatInterface';\n\nconst ChatBubble = ({ showChat, channel, chatHistory, setChatHistory, unreadMessage, setUnreadStatus, members }) => {\n  const [open, setOpenStatus] = useState(false);\n  const [message, setMessage] = useState('');\n  const { email } = useAuthState();\n\n  useEffect(() => {\n    const lastElement = document.getElementById('last-chat-element');\n    if (lastElement) {\n      lastElement.scrollIntoView();\n    }\n  }, [chatHistory, open]);\n\n  useEffect(() => {\n    const escFunction = (e) => {\n      if (e.keyCode !== 27) return;\n\n      openChat(false);\n    };\n\n    if (open) {\n      document.addEventListener('keydown', escFunction, false);\n    } else {\n      document.removeEventListener('keydown', escFunction, false);\n    }\n  }, [open]);  // eslint-disable-line\n\n  if (!channel || !showChat) return null;\n\n  const openChat = () => {\n    if (open) {\n      document.body.classList.remove('not-vertically-scrollable');\n    } else {\n      setUnreadStatus(false);\n      document.body.classList.add('not-vertically-scrollable');\n    }\n\n    setOpenStatus(!open);\n  };\n\n  const closeChat = () => { openChat(false) };\n\n  const sendMessage = () => {\n    if (!message || !message.length) return;\n\n    const formattedMessage = {\n      id: chatHistory.length + 1,\n      sender: email,\n      message,\n      timestamp: Date.now()\n    };\n\n    // Send message to others in the channel\n    channel.trigger('client-chat-message', formattedMessage);\n    setChatHistory([ ...chatHistory, formattedMessage ]);\n\n    setMessage('');\n  };\n\n  return (\n    <>\n      <button\n        className='button'\n        tabIndex={0}\n        onClick={openChat}\n        disabled={Object.values(members).length < 2}\n        onKeyUp={(e) => e.key === 'Enter' && openChat()}\n      >\n        Workout Chat\n        {unreadMessage && <div className='dot ml-1 has-background-primary'></div>}\n      </button>\n\n      <ChatInterface\n        open={open}\n        members={members}\n        chatHistory={chatHistory}\n        closeChat={closeChat}\n        message={message}\n        setMessage={setMessage}\n        sendMessage={sendMessage}\n      />\n    </>\n  );\n};\n\nexport default ChatBubble;\n","import React, { useEffect, useState } from 'react';\nimport { pauseButtonSrc, playButtonSrc, timeToString } from '../Config/utils';\n\nconst StopWatch = ({ showFinish = true, onPlayCallback = () => {}, onStopCallback = () => {}, onFinishCallback = () => {} }) => {\n  const [playing, setPlaying ] = useState(false);\n  const [startTime, setTime ] = useState(null);\n  const [elapsedTime, setElapsedTime ] = useState(0);\n  const [timerInterval, setTimerInterval ] = useState(null);\n\n  const handleMainAction = () => {\n    if (!playing) {\n      setTime(Date.now() - elapsedTime);\n      onPlayCallback();\n    } else {\n      clearInterval(timerInterval);\n      onStopCallback();\n    }\n\n    setPlaying(!playing);\n  };\n\n  useEffect(() => {\n    // On mount, we want to start the timer\n    handleMainAction();\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    // With react hooks, we can't set a callback after\n    // calling setState on a state variable. To get around this,\n    // we setup an effect that triggers when startTime is changed\n    if (startTime === null) {\n      clearInterval(timerInterval);\n      setTimerInterval(null);\n      setElapsedTime(0);\n    } else {\n      const interval = setInterval(function(){\n        if (startTime === null) {\n          setElapsedTime(0);\n        } else {\n          setElapsedTime(Date.now() - startTime);\n        }\n      }, 10);\n      setTimerInterval(interval);\n    }\n  }, [startTime]); // eslint-disable-line\n\n  const handleFinish = () => {\n    if (playing) {\n      handleMainAction();\n      onFinishCallback(elapsedTime);\n    }\n  };\n\n  return (\n    <div className='has-text-centered is-flex is-flex-direction-column is-align-items-center'>\n      <div className='stopwatch-circle circle is-flex is-justify-content-center is-align-items-center'>\n        <span className='time is-size-4' id='display'>\n          {elapsedTime ? timeToString(elapsedTime) : '00:00:00'}\n        </span>\n      </div>\n\n      <div className='mt-3 is-flex is-justify-content-space-between is-align-items-center'>\n        <img\n          className='is-clickable'\n          tabIndex={0}\n          id='main-action-button'\n          alt={playing ? 'pause stopwatch' : 'start stopwatch'}\n          src={playing ? pauseButtonSrc : playButtonSrc}\n          onClick={handleMainAction}\n          onKeyUp={(e) => e.key === 'Enter' && handleMainAction()}\n        />\n\n        {showFinish && playing && (\n          <div\n            className='button ml-5 is-medium'\n            tabIndex={0}\n            id='reset-button'\n            onClick={handleFinish}\n            onKeyUp={(e) => e.key === 'Enter' && handleFinish()}\n          >\n            Finish\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StopWatch;\n","export const grabSegmentNotificationClass = (finishTime, timeGoal) => {\n  const finishTimeInSeconds = finishTime / 1000.0;\n  const difference = timeGoal - finishTimeInSeconds;\n  if (difference < -8.0) return 'notification is-danger';\n  if (difference < -4.0) return 'notification is-warning';\n\n  return 'notification is-success';\n};\n","import React from 'react';\nimport StopWatch from '../../Components/Stopwatch';\nimport { timeToString } from '../../Config/utils';\nimport { grabSegmentNotificationClass } from './SegmentUtils';\n\nconst SegmentActions = ({ workoutStarted, finishTime, timeGoal, startClick, onFinishCallback, showStopwatch }) => {\n  if (!workoutStarted) return null;\n\n  if (finishTime) {\n    return (\n      <div className={grabSegmentNotificationClass(finishTime, timeGoal)}>\n        <b className='is-size-5'>Actual Time</b>\n        <br/>\n        {timeToString(finishTime)}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {!showStopwatch && (\n        <div tabIndex={0} className='button is-primary is-medium' onClick={startClick}>\n          Start\n        </div>\n      )}\n\n      {showStopwatch && <StopWatch onFinishCallback={onFinishCallback} />}\n    </>\n  );\n}\n\nexport default SegmentActions;\n","import React, { useState } from 'react';\nimport SegmentActions from './SegmentActions';\n\nconst Segment = ({ segment, segmentLength, index, workoutStarted }) => {\n  const [showStopwatch, toggleStopwatch] = useState(false);\n  const [finishTime, setFinishTime] = useState(null);\n\n  const startClick = () => {\n    toggleStopwatch(!showStopwatch);\n  };\n  const onFinishCallback = (time) => {\n    toggleStopwatch(false);\n    setFinishTime(time);\n    // TODO: Kickoff rest period (segment.rest)\n    // TODO: show post segment feedback (good, neutral, bad)\n    // TODO: consolidate info and show next segment\n  };\n\n  return (\n    <div className='column is-one-third'>\n      <div className='card'>\n        <div className='segment-position'>\n          {index + 1 } / {segmentLength}\n        </div>\n\n        <div className='card-content pt-1'>\n          <div className='content'>\n            <div className='columns mt-1 is-flex'>\n              <div className='column is-half'>\n                <b className='is-size-5'>{segment.display_length} Goal</b>\n                <br/>\n                {segment.time_goal} seconds\n              </div>\n\n              <div className='column is-half'>\n                <b className='is-size-5'>Rest</b>\n                <br/>\n                {segment.rest} seconds\n              </div>\n            </div>\n\n            <SegmentActions\n              finishTime={finishTime}\n              timeGoal={segment.time_goal}\n              showStopwatch={showStopwatch}\n              startClick={startClick}\n              onFinishCallback={onFinishCallback}\n              workoutStarted={workoutStarted}\n            />\n\n            <hr />\n\n            <p>\n              {segment.description}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Segment;\n","import React from 'react';\nimport Segment from './Segment';\n\nconst Segments = ({ selectedWorkout, workoutStarted }) => {\n  if (!selectedWorkout.segments.length) {\n    return (\n      <p className='mb-3'>\n        Workout cannot start. No segments added yet :(\n      </p>\n    );\n  }\n\n  const segments = selectedWorkout.segments;\n  const segmentLength = segments.length;\n\n  return (\n    <>\n      <div className='is-size-3 mb-5'>\n        {segmentLength} Total {segmentLength === 1 ? 'Segment' : 'Segments'}\n      </div>\n\n      <div className='segments columns'>\n        {segments.map((segment, index) => (\n          <Segment\n            key={segment.identifier}\n            segment={segment}\n            segmentLength={segmentLength}\n            index={index}\n            workoutStarted={workoutStarted}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Segments;\n","import React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport LockScreen from './LockScreen';\nimport FullScreen from './FullScreen';\nimport ChatBubble from './ChatBubble';\nimport Segments from './Segments';\nimport ChatMembers from './ChatMembers';\nimport Show from '../../Components/Show';\n\nclass WorkoutDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatHistory: [],\n      unreadMessage: false,\n      members: [],\n      showChat: false\n    };\n\n    // Enable pusher logging - not enabled in any environment except local\n    Pusher.logToConsole = process.env.NODE_ENV === 'development';\n\n    this.pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n      cluster: process.env.REACT_APP_PUSHER_CLUSTER,\n      authEndpoint: `${process.env.REACT_APP_ROOT_URL}/pusher/auth`,\n      auth: {\n        headers: { 'Authorization': localStorage.getItem('currentUserToken') || '' }\n      }\n    });\n\n    this.channel = this.pusher.subscribe(`presence-workoutChannel-${this.identifier}`);\n  }\n\n  get identifier() {\n    const { identifier } = this.props.selectedWorkout;\n    return identifier;\n  }\n\n  componentDidMount() {\n    this.channel.bind('pusher:subscription_succeeded', function(info) {\n      this.setState({ members: info.members, showChat: true });\n    }, this);\n\n    this.channel.bind('pusher:member_added', function(member) {\n      const newMembers = {\n        ...this.state.members,\n        [member.id]: member.info\n      }\n      this.setState({ members: newMembers });\n    }, this);\n\n    this.channel.bind('pusher:member_removed', function(member) {\n      const newMembers = Object.keys(this.state.members)\n        .filter(key => `${key}` !== `${member.id}`)\n        .reduce((obj, key) => {\n          obj[key] = this.state.members[key];\n          return obj;\n        }, {});\n\n      this.setState({ members: newMembers });\n    }, this);\n\n    this.channel.bind('client-chat-message', (data) => {\n      this.setState({\n        chatHistory: [\n          ...this.state.chatHistory,\n          {\n            ...data\n          }\n        ],\n        unreadMessage: true\n      });\n    }, this);\n\n    this.channel.bind('client-workout-started', (data) => {\n      this.props.mirrorWorkout(data);\n    }, this);\n  }\n\n  componentWillUnmount() {\n    this.pusher.unsubscribe(`presence-workoutChannel-${this.identifier}`);\n\n    if (this.channel) {\n      this.channel.unbind();\n    }\n\n    this.pusher.disconnect();\n\n    document.body.classList.remove('not-vertically-scrollable');\n  }\n\n  setChatHistory = (history) => {\n    this.setState({ chatHistory: history });\n  }\n\n  setUnreadStatus = (status) => {\n    this.setState({ unreadMessage: status });\n  }\n\n  get showStartWorkoutButton() {\n    if (this.props.workoutStarted) return false;\n\n    return !!this.props.selectedWorkout.segments.length;\n  }\n\n  startWorkoutWrapper = () => {\n    this.props.startWorkout(this.channel);\n  }\n\n  render() {\n    return (\n      <>\n        <div className='buttons'>\n          <Show condition={this.showStartWorkoutButton}>\n            <div tabIndex={0} className='button is-primary' onClick={this.startWorkoutWrapper}>\n              Start Workout\n            </div>\n          </Show>\n\n          <LockScreen />\n          <FullScreen />\n          <ChatBubble\n            channel={this.channel}\n            setChatHistory={this.setChatHistory}\n            setUnreadStatus={this.setUnreadStatus}\n            {...this.state}\n          />\n        </div>\n\n        <ChatMembers members={this.state.members} />\n\n        <Segments selectedWorkout={this.props.selectedWorkout} workoutStarted={this.props.workoutStarted} />\n      </>\n    );\n  }\n}\n\nexport default WorkoutDetail;\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Loader from '../../Components/Loader';\nimport Show from '../../Components/Show';\nimport { generateUUID } from '../../Config/utils';\nimport { useAuthDispatch, useAuthState } from '../../Context';\nimport { getWorkout } from '../../Context/actions';\nimport PreviousSessions from './PreviousSessions';\nimport WorkoutDetail from './WorkoutDetail';\n\nconst Workout = ({ match }) => {\n  const { params: { identifier } } = match;\n  const { selectedWorkout, error, loading } = useAuthState();\n  const dispatch = useAuthDispatch();\n  const [activeTab, setActiveTab] = useState('current');\n\n  const sessionFromLS = localStorage.getItem('liveSessionIdentifier') || null;\n  const identifierFromLS = localStorage.getItem('liveWorkoutIdentifier') || null;\n  const workoutStartedInitial = !!sessionFromLS && identifier === identifierFromLS;\n\n  const [workoutStarted, setWorkoutStatus] = useState(workoutStartedInitial);\n  const sessionIdenitiferInitial = workoutStartedInitial ? sessionFromLS : null;\n  const [liveSessionIdentifier, setSessionIdentifier] = useState(sessionIdenitiferInitial);\n\n  const setWorkoutData = (uuid, newIdentifier) => {\n    localStorage.setItem('liveSessionIdentifier', uuid);\n    localStorage.setItem('liveWorkoutIdentifier', newIdentifier);\n    setWorkoutStatus(true);\n    setSessionIdentifier(uuid);\n  };\n\n  const startWorkout = (channel = null) => {\n    const uuid = generateUUID();\n    setWorkoutData(uuid, identifier);\n\n    if (channel) {\n      channel.trigger('client-workout-started', { uuid, identifier });\n    }\n  };\n\n  const mirrorWorkout = (data) => {\n    setWorkoutData(data.uuid, data.identifier);\n  };\n\n  useEffect(() => {\n    getWorkout(identifier, dispatch);\n  }, [identifier, dispatch]);\n\n  if (loading) {\n    return <Loader />;\n  } else if (!selectedWorkout || !Object.keys(selectedWorkout).length) {\n    return (\n      <div className='has-text-centered'>\n        <h1 className='is-size-3'>{error}</h1>\n        <NavLink to='/workouts' className='button mt-3'>Return to My Workouts</NavLink>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <nav className='breadcrumb mb-1' aria-label='breadcrumbs'>\n        <ul>\n          <li>\n            <NavLink to='/workouts' className=''>Workouts</NavLink>\n          </li>\n          <li className='is-active'>\n            <div className='ml-3'>{selectedWorkout.name}</div>\n          </li>\n        </ul>\n      </nav>\n\n      <Show condition={!workoutStarted}>\n        <div className='tabs is-medium'>\n          <ul>\n            <li className={activeTab === 'current' ? 'is-active' : undefined}>\n              {/* eslint-disable-next-line */}\n              <a className='tab' onClick={() => setActiveTab('current')}>\n                Current\n              </a>\n            </li>\n\n            <li className={activeTab === 'previous' ? 'is-active' : undefined}>\n              {/* eslint-disable-next-line */}\n              <a className='tab' onClick={() => setActiveTab('previous')}>\n                Previous Sessions\n              </a>\n            </li>\n          </ul>\n        </div>\n      </Show>\n      <Show condition={workoutStarted}>\n        <div className='is-size-4 mb-2' key={liveSessionIdentifier}>\n          Workout is Live!\n        </div>\n      </Show>\n\n      {activeTab === 'current' && (\n        <WorkoutDetail\n          selectedWorkout={selectedWorkout}\n          workoutStarted={workoutStarted}\n          startWorkout={startWorkout}\n          mirrorWorkout={mirrorWorkout}\n        />\n      )}\n      {activeTab === 'previous' && <PreviousSessions />}\n    </>\n  );\n}\n\nexport default Workout;\n"],"sourceRoot":""}