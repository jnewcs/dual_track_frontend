{"version":3,"sources":["Config/mocks.js","Context/actions.js","Components/Loader.jsx","Components/UpdateApp.jsx","Context/reducer.js","Context/context.js","Components/LogoutButton.jsx","Pages/Dashboard.jsx","Pages/Entrance/Form.jsx","Pages/Entrance/index.jsx","Pages/NotFound.jsx","Config/routes.js","Components/RedirectWrapper.jsx","Components/AppRoute.jsx","Components/DesktopNav.jsx","Components/NotificationContainer.jsx","Components/MobileNav.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockedWorkouts","identifier","process","name","description","mockedWorkoutsWithDetails","segments","display_length","length","measurement","time_goal","rest","quantity","superagent","require","sucessObject","success","failureObject","loginUser","dispatch","history","payload","type","post","send","set","end","err","res","email","body","token","headers","localStorage","setItem","notification","text","push","error","message","getWorkouts","a","setTimeout","workouts","getWorkout","mockedWorkout","find","w","workout","checkAuth","getItem","get","_err","needsLoginToProceed","statusCode","logout","removeItem","Loader","spaceTop","className","UpdateApp","useState","changelog","setChangelog","useAuthDispatch","updateAvailable","useAuthState","useEffect","path","document","getElementById","dataset","fetch","then","json","finalChangelog","Object","keys","filter","item","satisfies","map","version","id","onClick","navigator","serviceWorker","getRegistration","reg","waiting","console","log","postMessage","changeset","initialState","loading","errorMessage","selectedWorkout","AuthReducer","action","Error","AuthStateContext","createContext","AuthDispatchContext","context","useContext","undefined","AuthProvider","children","useReducer","user","Provider","value","LogoutButton","buttonClass","useHistory","handleLogout","Boolean","tabIndex","onKeyUp","e","key","Dashboard","_history","Form","localEmail","setEmail","password","setPassword","primaryText","htmlFor","autoComplete","required","disabled","onChange","target","Entrance","activeTab","setActiveTab","handleLogin","preventDefault","sharedProps","switchTab","tab","role","NotFound","routes","component","isPrivate","React","lazy","RedirectWrapper","pathname","to","AppRoute","Component","render","props","DesktopNav","aria-label","aria-expanded","data-target","aria-hidden","activeClassName","exact","NotificationContainer","handleClick","dangerouslySetInnerHTML","__html","MobileNav","App","addPwaUpdateListener","isUpdateAvailable","fallback","route","index","registerValidSW","swUrl","config","installingWorker","handleUpdate","register","registration","state","onupdatefound","installing","onstatechange","controller","onSuccess","catch","oldRegistration","oldSw","active","olsSwState","addEventListener","refreshing","newRegistration","newSw","newSwState","window","location","reload","isLocalhost","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","hashType","URL","href","origin","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7b4c71e9.chunk.js","sourcesContent":["export const mockedWorkouts = [\n  {\n    identifier: process.env.REACT_APP_WORKOUT_UID,\n    name: 'Track 150m Intervals',\n    description: '5 sets of 150m with 2 minute breaks'\n  },\n  {\n    identifier: '8935fr-1m32lk',\n    name: '1 mile endurance',\n    description: 'Simple 1 mile run to gain endurance'\n  },\n];\n\nexport const mockedWorkoutsWithDetails = [\n  {\n    identifier: process.env.REACT_APP_WORKOUT_UID,\n    name: 'Track 150m Intervals',\n    description: '5 sets of 150m with 2 minute breaks',\n    segments: [\n      {\n        identifier: 'y676-3refs',\n        display_length: '150m',\n        length: 150.00,\n        measurement: 'meter',\n        time_goal: 30.00,\n        rest: 60.00,\n        quantity: 1,\n        description: 'Slow build up. Try to reach 60% speed by the finish line'\n      },\n      {\n        identifier: 't234o-G435231',\n        display_length: '100m',\n        length: 100.00,\n        measurement: 'meter',\n        time_goal: 20.00,\n        rest: 75.00,\n        quantity: 1,\n        description: 'Try to reach 60% speed by the finish line'\n      }\n    ]\n  },\n  {\n    identifier: '8935fr-1m32lk',\n    name: '1 mile endurance',\n    description: 'Simple 1 mile run to gain endurance',\n    segments: []\n  },\n];\n","import { mockedWorkouts, mockedWorkoutsWithDetails } from '../Config/mocks';\nconst superagent = require('superagent');\n\nconst sucessObject = { success: true };\nconst failureObject = { success: false };\nconst unhandledErrorMsg = 'Unhandled error while logging in :(';\n\nexport function loginUser(dispatch, history, payload) {\n  dispatch({ type: 'REQUEST_LOGIN' });\n\n  return superagent\n    .post(`${process.env.REACT_APP_ROOT_URL}/login`)\n    .send(payload) // sends a JSON post body\n    .set('Content-Type', 'application/json')\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      const email = res?.body?.email;\n      if (!err && email) {\n        // Using `Access-Control-Expose-Headers: 'Authorization'` response header,\n        // we are able to grab the Authorization token and save it in memory\n        var token = res.headers['Authorization'] || res.headers['authorization'];\n        dispatch({ type: 'LOGIN_SUCCESS', payload: { email: email, token: token } });\n        localStorage.setItem('currentUserEmail', email);\n        localStorage.setItem('currentUserToken', token);\n\n        dispatch({ type: 'TOGGLE_NOTIFICATION', notification: {\n          text: 'Logged in successfully!',\n          type: 'info'\n        }});\n        history.push('/dashboard');\n\n        return sucessObject;\n      }\n\n      dispatch({ type: 'LOGIN_ERROR', error: res?.body?.message || unhandledErrorMsg });\n      return failureObject;\n    });\n}\n\nexport async function getWorkouts(dispatch) {\n  // TODO: Change this to grab workouts from the backend service\n  // We should use the needsLoginToProceed function here too\n  dispatch({ type: 'REQUEST_WORKOUTS' });\n  setTimeout(() => {\n    dispatch({ type: 'RECEIVE_WORKOUTS', workouts: mockedWorkouts });\n  }, 1000);\n};\n\nexport async function getWorkout(identifier, dispatch) {\n  // TODO: Change this to grab the workout from the backend service\n  // We should use the needsLoginToProceed function here too\n  dispatch({ type: 'REQUEST_WORKOUT' });\n  setTimeout(() => {\n    const mockedWorkout = mockedWorkoutsWithDetails.find(w => w.identifier === identifier);\n    if (mockedWorkout) {\n      dispatch({ type: 'RECEIVE_WORKOUT', workout: mockedWorkout });\n    } else {\n      dispatch({ type: 'RECEIVE_WORKOUT_ERROR', error: 'Could not find this workout :(' });\n    }\n  }, 1000);\n};\n\nexport async function checkAuth(dispatch) {\n  const token = localStorage.getItem('currentUserToken') || '';\n  return superagent\n    .get(`${process.env.REACT_APP_ROOT_URL}/users/check`)\n    .set('Content-Type', 'application/json')\n    .set('Accept', 'application/json')\n    .set('Authorization', token)\n    .end((_err, res) => {\n      if (needsLoginToProceed(res, dispatch)) return;\n\n      dispatch({ type: 'TOGGLE_NOTIFICATION', notification: {\n        text: 'Auth token is still valid :)',\n        type: 'info'\n      }});\n    });\n}\n\nfunction needsLoginToProceed(res, dispatch) {\n  if (res.statusCode !== 401) return false;\n\n  logout(dispatch);\n  dispatch({ type: 'TOGGLE_NOTIFICATION', notification: {\n    text: 'No longer signed in :( Please login to continue',\n    type: 'warning'\n  }});\n  return true;\n}\n\nexport async function logout(dispatch) {\n  dispatch({ type: 'LOGOUT' });\n  localStorage.removeItem('currentUserEmail');\n  localStorage.removeItem('currentUserToken');\n}\n","import React from 'react';\n\nconst Loader = ({ spaceTop = '' }) => (\n  <div className={`loader is-flex is-justify-content-center ${spaceTop}`}>\n    <div className='spinner-container'>\n      <div className='spinner'></div>\n    </div>\n  </div>\n);\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport { satisfies } from 'es-semver';\nimport { useAuthDispatch, useAuthState } from '../Context';\n\nconst UpdateApp = () => {\n  const [ changelog, setChangelog] = useState(null);\n  const dispatch = useAuthDispatch();\n  const { updateAvailable } = useAuthState();\n\n  useEffect(() => {\n    const path = document.getElementById('changelog-path').dataset.path;\n    fetch(path)\n      .then(res => res.json())\n      .then(changelog => {\n        const relevantVersions = Object.keys(changelog).filter(item => satisfies(item, `>${process.env.REACT_APP_VERSION}`));\n        const finalChangelog = relevantVersions.map(version => ({\n          version,\n          description: changelog[version].description\n        }));\n        setChangelog(finalChangelog);\n      });\n  }, []);\n\n  if (!updateAvailable) return null;\n\n  const refreshApp = function() {\n    navigator.serviceWorker.getRegistration()\n      .then(reg => {\n        if (reg.waiting) {\n          console.log('[Posting message from Update interface]');\n          reg.waiting.postMessage({ type: 'SKIP_WAITING' });\n        }\n\n        console.log('[Setting update available to false]');\n        // We assume that the SW get's he request and claims\n        dispatch({ type: 'TOGGLE_UPDATE_AVAILABLE', updateAvailable: false });\n      });\n  };\n\n  return (\n    <>\n      <hr />\n\n      <div id='new-version-refresh-notification' className='mb-5 mt-5'>\n        <div className='notification is-info is-light is-flex is-align-items-center'>\n          A new version of DualTrack is available\n\n          <div className='button is-light ml-2' id='new-version-refresh-button' onClick={refreshApp}>\n            Refresh to Update!\n          </div>\n        </div>\n      </div>\n\n      {changelog && changelog.map(changeset => (\n        <div key={changeset.version} className='box'>\n          <h3 className='is-size-3'>{changeset.version}</h3>\n          <p>{changeset.description}</p>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default UpdateApp;\n","let email = localStorage.getItem('currentUserEmail') || '';\nlet token = localStorage.getItem('currentUserToken') || '';\n\nexport const initialState = {\n  email: '' || email,\n  token: '' || token,\n  loading: false,\n  notification: null,\n  errorMessage: null,\n  updateAvailable: false,\n  workouts: [],\n  selectedWorkout: {}\n};\n\nexport const AuthReducer = (initialState, action) => {\n  switch (action.type) {\n    case 'REQUEST_WORKOUT':\n    case 'REQUEST_LOGIN':\n    case 'REQUEST_AUTH':\n      return {\n        ...initialState,\n        loading: true,\n        errorMessage: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...initialState,\n        email: action.payload.email,\n        token: action.payload.token,\n        loading: false,\n        errorMessage: null\n      };\n    case 'LOGOUT':\n      return {\n        ...initialState,\n        email: '',\n        token: '',\n        errorMessage: null\n      };\n    case 'LOGIN_ERROR':\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error\n      };\n    case 'RESET_ERROR':\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: null\n      };\n    case 'TOGGLE_UPDATE_AVAILABLE':\n      return {\n        ...initialState,\n        updateAvailable: action.updateAvailable\n      };\n    case 'TOGGLE_NOTIFICATION':\n      return {\n        ...initialState,\n        notification: action.notification\n      };\n    case 'REQUEST_WORKOUTS':\n      return {\n        ...initialState,\n        loading: true,\n        errorMessage: null,\n        selectedWorkout: {}\n      };\n    case 'RECEIVE_WORKOUTS':\n      return {\n        ...initialState,\n        loading: false,\n        error: null,\n        workouts: action.workouts\n      };\n    case 'RECEIVE_WORKOUT':\n      return {\n        ...initialState,\n        loading: false,\n        error: null,\n        selectedWorkout: action.workout\n      };\n    case 'RECEIVE_WORKOUT_ERROR':\n      return {\n        ...initialState,\n        loading: false,\n        error: action.error,\n        selectedWorkout: {}\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n","import React, { createContext, useContext, useReducer } from 'react';\nimport { AuthReducer, initialState } from './reducer';\n\nconst AuthStateContext = createContext();\nconst AuthDispatchContext = createContext();\n\nexport function useAuthState() {\n  const context = useContext(AuthStateContext);\n  if (context === undefined) {\n    throw new Error('useAuthState must be used within a AuthProvider');\n  }\n\n  return context;\n}\n\nexport function useAuthDispatch() {\n  const context = useContext(AuthDispatchContext);\n  if (context === undefined) {\n    throw new Error('useAuthDispatch must be used within a AuthProvider');\n  }\n\n  return context;\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, dispatch] = useReducer(AuthReducer, initialState);\n\n  return (\n    <AuthStateContext.Provider value={user}>\n      <AuthDispatchContext.Provider value={dispatch}>\n        {children}\n      </AuthDispatchContext.Provider>\n    </AuthStateContext.Provider>\n  );\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { logout, useAuthDispatch, useAuthState } from '../Context';\n\nconst LogoutButton = ({ buttonClass }) => {\n  const { email } = useAuthState();\n  const dispatch = useAuthDispatch();\n  const history = useHistory();\n\n  const handleLogout = () => {\n    logout(dispatch);\n    history.push('/entrance');\n    dispatch({ type: 'TOGGLE_NOTIFICATION', notification: {\n      text: 'Logged out successfully. Come back soon!',\n      type: 'info'\n    }});\n  };\n\n  if (!Boolean(email)) return null;\n\n  return (\n    <div\n      className={buttonClass}\n      tabIndex={0}\n      onClick={handleLogout}\n      onKeyUp={(e) => e.key === 'Enter' && handleLogout()}\n    >\n      Logout\n    </div>\n  );\n}\n\nexport default LogoutButton;\n","import React from 'react'\nimport { checkAuth, useAuthDispatch, useAuthState } from '../Context';\n\nconst Dashboard = ({ _history }) => {\n  const dispatch = useAuthDispatch();\n  const { email } = useAuthState();\n\n  return (\n    <div className='ml-5 mr-5'>\n      <div>\n        <h1 className='is-size-2 mb-5'>\n          My Dashboard\n        </h1>\n\n        <div className='buttons'>\n          <button className='button is-default' onClick={() => checkAuth(dispatch)}>\n            Check Auth :)\n          </button>\n        </div>\n      </div>\n\n      <p>\n        {`Welcome to the dashboard ${email}!`}\n      </p>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nconst Form = ({ localEmail, setEmail, loading, password, setPassword, onClick, primaryText }) => (\n  <form>\n    <div className='field'>\n      <label className='label' htmlFor='email'>Email</label>\n      <div className='control'>\n        <input\n          className='input'\n          autoComplete='email'\n          required\n          type='text'\n          id='email'\n          disabled={loading}\n          value={localEmail}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n    </div>\n\n    <div className='field'>\n      <label className='label' htmlFor='password'>Password</label>\n      <div className='control'>\n        <input\n          className='input'\n          autoComplete='current-password'\n          required\n          type='password'\n          id='password'\n          disabled={loading}\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n    </div>\n\n    <button\n      type='submit'\n      className={`button is-primary mt-5 ${loading ? 'is-loading' : undefined}`}\n      onClick={onClick}\n      disabled={loading}\n    >\n      {primaryText}\n    </button>\n  </form>\n);\n\nexport default Form;\n","import React, { useState, useEffect } from 'react';\nimport UpdateApp from '../../Components/UpdateApp';\nimport { loginUser, useAuthDispatch, useAuthState } from '../../Context';\nimport Form from './Form';\n\nconst Entrance = ({ history }) => {\n  const { email, loading, errorMessage } = useAuthState();\n  const dispatch = useAuthDispatch();\n\n  useEffect(() => {\n    if (email) {\n      history.push('/dashboard');\n    }\n  }, [email, history]);\n\n  const [localEmail, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [activeTab, setActiveTab] = useState('login');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    let payload = {\n      user: {\n        password,\n        email: localEmail\n      }\n    };\n\n    loginUser(dispatch, history, payload);\n  }\n  const sharedProps = {\n    localEmail,\n    password,\n    setEmail,\n    setPassword,\n    loading\n  };\n  const switchTab = (tab) => {\n    if (loading) return;\n\n    dispatch({ type: 'RESET_ERROR' });\n    setActiveTab(tab);\n  };\n\n  return (\n    <div className='columns is-centered'>\n      <div className='column is-half'>\n        {errorMessage && <p className='notification is-danger'>{errorMessage}</p>}\n\n        <div className='tabs is-medium'>\n          <ul>\n            <li className={activeTab === 'login' ? 'is-active' : undefined}>\n              {/* eslint-disable-next-line */}\n              <a role='menuitem' disabled={loading} onClick={() => switchTab('login')}>Login</a>\n            </li>\n            <li role='menuitem' className={activeTab === 'register' ? 'is-active' : undefined}>\n              {/* eslint-disable-next-line */}\n              <a disabled={loading} onClick={() => switchTab('register')}>Register</a>\n            </li>\n          </ul>\n        </div>\n\n        {activeTab === 'login' && (\n          <Form\n            {...sharedProps}\n            onClick={handleLogin}\n            primaryText='Login'\n          />\n        )}\n\n        {activeTab === 'register' && (\n          <Form\n            {...sharedProps}\n            onClick={handleLogin}\n            primaryText='Register'\n          />\n        )}\n\n        <UpdateApp />\n      </div>\n    </div>\n  );\n}\n\nexport default Entrance;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <h1 className='is-size-2 mb-5'>\n      Page not found!\n    </h1>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\n\nimport Dashboard from '../Pages/Dashboard';\nimport Entrance from '../Pages/Entrance';\nimport NotFound from '../Pages/NotFound';\nconst LazyWorkouts = React.lazy(() => import('../Pages/Workouts'));\nconst LazyWorkout = React.lazy(() => import('../Pages/Workout'));\nconst LazySettings = React.lazy(() => import('../Pages/Settings'));\n\nconst routes =[\n  {\n    path:'/',\n    component: Entrance,\n    isPrivate: false\n  },\n  {\n    path:'/entrance',\n    component: Entrance,\n    isPrivate: false\n  },\n  {\n    path:'/dashboard',\n    component: Dashboard,\n    isPrivate: true\n  },\n  {\n    path:'/workouts',\n    component: LazyWorkouts,\n    isPrivate: true\n  },\n  {\n    path:'/workouts/:identifier',\n    component: LazyWorkout,\n    isPrivate: true\n  },\n  {\n    path:'/settings',\n    component: LazySettings,\n    isPrivate: true\n  },\n  {\n    path:'/*',\n    component: NotFound,\n    isPrivate: false\n  },\n]\n\nexport default routes;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useAuthDispatch } from '../Context';\n\nconst RedirectWrapper = ({ pathname }) => {\n  const dispatch = useAuthDispatch();\n  useEffect(() => {\n    dispatch({ type: 'TOGGLE_NOTIFICATION', notification: {\n      text: 'Access denied',\n      type: 'warning'\n    }});\n  }, [dispatch]);\n\n  return <Redirect to={{ pathname }} />\n}\n\nexport default RedirectWrapper;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useAuthState } from '../Context';\nimport RedirectWrapper from './RedirectWrapper';\n\nconst AppRoute = ({ component: Component, path, isPrivate, ...rest }) => {\n  const { email } = useAuthState();\n  return (\n    <Route\n      path={path}\n      render={props =>\n        isPrivate && !Boolean(email) ? (\n          <RedirectWrapper pathname='/entrance' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n      {...rest}\n    />\n  )\n}\n\nexport default AppRoute;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {  useAuthState } from '../Context';\nimport LogoutButton from './LogoutButton';\n\nconst DesktopNav = () => {\n  const { email, updateAvailable } = useAuthState();\n\n  return (\n    <nav className='navbar is-light is-hidden-touch' role='navigation' aria-label='main navigation'>\n      <div className='navbar-brand'>\n        <div className='has-text-primary is-size-3 p-2'>\n          DualTrack\n        </div>\n\n        <div\n          role='button'\n          className='navbar-burger'\n          aria-label='menu'\n          aria-expanded='false'\n          data-target='navbar-menu'\n          id='navbar-burger'\n        >\n          <span aria-hidden='true'></span>\n          <span aria-hidden='true'></span>\n          <span aria-hidden='true'></span>\n        </div>\n      </div>\n\n      <div id='navbar-menu' className='navbar-menu'>\n        <div className='navbar-start'>\n          {Boolean(email) && (\n            <>\n              <NavLink to='/dashboard' className='navbar-item' activeClassName='is-active'>Dashboard</NavLink>\n              <NavLink exact={false} to='/workouts' className='navbar-item' activeClassName='is-active'>Workouts</NavLink>\n              <NavLink to='/settings' className='navbar-item' activeClassName='is-active'>\n                Settings\n                {updateAvailable && <div className='dot ml-1 has-background-primary'></div>}\n              </NavLink>\n              <LogoutButton buttonClass='navbar-item is-clickable' />\n            </>\n          )}\n        </div>\n\n        <div className='navbar-end'>\n          <div className='navbar-item'>\n            <div className='buttons'>\n              {!Boolean(email) && (\n                <NavLink to='/entrance' className='button is-light' activeClassName='is-active'>Login</NavLink>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default DesktopNav;\n","import React from 'react';\nimport { useAuthDispatch, useAuthState } from '../Context';\n\nconst NotificationContainer = () => {\n  const dispatch = useAuthDispatch();\n  const { notification } = useAuthState();\n  if (notification === null) return null;\n\n  const handleClick = () => {\n    dispatch({ type: 'TOGGLE_NOTIFICATION', notification: null });\n  };\n\n  return (\n    <div className={`notification is-${notification.type} is-light is-flex is-align-items-center`}>\n      <div\n        tabIndex={0}\n        className='delete is-clickable is-size-3'\n        onClick={handleClick}\n        onKeyUp={(e) => e.key === 'Enter' && handleClick()}\n        dangerouslySetInnerHTML={{ __html: '&#215;' }}\n      />\n      {notification.text}\n    </div>\n  );\n}\n\nexport default NotificationContainer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Home, Settings, Watch } from 'react-feather';\n\nconst MobileNav = () => {\n  return (\n    <>\n      <div className='pt-5 pb-5'></div>\n      <br/>\n\n      <div className='is-hidden-desktop p-2 has-background-light' id='mobile-footer'>\n        <div className='is-flex is-align-items-center is-justify-content-space-between pl-2 pr-3'>\n          <NavLink to='/dashboard' className='icon p-2 has-text-black' activeClassName='has-text-primary'>\n            <Home />\n          </NavLink>\n\n          <NavLink exact={false} to='/workouts' className='icon p-2 has-text-black' activeClassName='has-text-primary'>\n            <Watch />\n          </NavLink>\n\n          <NavLink to='/settings' className='icon p-2 has-text-black' activeClassName='has-text-primary'>\n            <Settings />\n          </NavLink>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default MobileNav;\n","import React, { Suspense } from 'react';\nimport './App.scss';\nimport './Styles/General.css';\nimport './Styles/MobileGeneral.css';\nimport './Styles/Pattern.css';\nimport { Switch } from 'react-router-dom';\nimport { addPwaUpdateListener } from 'pwa-helper-components';\n\nimport routes from './Config/routes.js';\nimport { useAuthDispatch } from './Context';\nimport AppRoute from './Components/AppRoute';\nimport DesktopNav from './Components/DesktopNav';\nimport NotificationContainer from './Components/NotificationContainer';\nimport Loader from './Components/Loader';\nimport MobileNav from './Components/MobileNav';\n\nfunction App() {\n  const dispatch = useAuthDispatch();\n  addPwaUpdateListener((isUpdateAvailable) => {\n    dispatch({ type: 'TOGGLE_UPDATE_AVAILABLE', updateAvailable: isUpdateAvailable });\n  });\n\n  return (\n    <>\n      <div id='app-container'>\n        <DesktopNav />\n        <NotificationContainer />\n\n        <div className='container is-widescreen pb-5'>\n          <Suspense fallback={<Loader />}>\n            <Switch>\n                {routes.map((route, index) => (\n                  <AppRoute\n                    exact\n                    key={index}\n                    {...route}\n                  />\n                ))}\n            </Switch>\n          </Suspense>\n        </div>\n\n        <MobileNav />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  let installingWorker;\n  // Documentation: https://deanhume.com/displaying-a-new-version-available-progressive-web-app\n\n  handleUpdate();\n\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      console.log('[Registering SW]: ', registration);\n      if (registration.waiting && registration.waiting.state === 'installed') {\n        // The service worker is installed and we just need to activate it\n        // Case handled by the settings page update interface\n        // Uncomment the following line to force an update\n        // registration.waiting.skipWaiting();\n      }\n\n      registration.onupdatefound = () => {\n        installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, we know there is a new version ready\n              // Uncomment the following line to force an update\n              // navigator.serviceWorker.skipWaiting();\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nasync function handleUpdate() {\n  if ('serviceWorker' in navigator) {\n    let refreshing;\n\n    // https://dev.to/thepassle/on-pwa-update-patterns-4fgm\n    // check to see if there is a current active service worker\n    const oldRegistration = await navigator.serviceWorker.getRegistration();\n    const oldSw = oldRegistration && oldRegistration.active;\n    const olsSwState = oldSw && oldSw.state;\n\n    navigator.serviceWorker.addEventListener('controllerchange', async () => {\n      if (refreshing) return;\n\n      // when the controllerchange event has fired, we get the new service worker\n      const newRegistration = await navigator.serviceWorker.getRegistration();\n      const newSw = newRegistration && newRegistration.active;\n      const newSwState = newSw && newSw.state;\n\n      // if there was already an old activated service worker, and a new activating service worker, do the reload\n      if (olsSwState === 'activated' && newSwState === 'activating') {\n        refreshing = true;\n        window.location.reload();\n      }\n    });\n  }\n}\n\n//////////////////\n// LOCAL ENV ONLY!\n//////////////////\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './Context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <HashRouter hashType='slash'>\n        <App />\n      </HashRouter>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}