{"version":3,"sources":["Components/Show.jsx","Pages/Workout/SegmentUtils.js","Pages/Workouts/index.jsx"],"names":["Show","condition","children","getFromLocalStorage","key","type","item","localStorage","getItem","JSON","parse","grabSegmentNotificationClass","finishTime","timeGoal","difference","getPreviousWorkoutData","identifier","getRelevantSegmentData","sessionIdentifier","segmentIdentifier","relevantSession","saveRelevantSegmentData","segmentData","savedIdentifierData","savedSessionData","newSessionData","jsonString","stringify","setItem","removeWorkoutHistory","removeItem","isLastSegment","segments","findIndex","seg","length","Workouts","useAuthState","workouts","loading","dispatch","useAuthDispatch","useEffect","getWorkouts","showWorkouts","identifierFromLS","className","map","workout","to","name","description"],"mappings":"2HAMeA,IANF,SAAC,GAAoC,IAAD,IAAjCC,iBAAiC,SAAfC,EAAe,EAAfA,SAChC,OAAKD,EAEEC,EAFgB,O,iSCDZC,EAAsB,SAACC,GAA0B,IAArBC,EAAoB,uDAAb,SAC9C,GAAa,WAATA,EAAmB,CACrB,IAAMC,EAAOC,aAAaC,QAAQJ,IAAQ,KAC1C,OAAOK,KAAKC,MAAMJ,GAGpB,IAAMA,EAAOC,aAAaC,QAAQJ,GAClC,OAAKE,GAAiB,SAATA,EACNA,EAD8B,MAI1BK,EAA+B,SAACC,EAAYC,GACvD,IACMC,EAAaD,EADSD,EAAa,IAEzC,OAAIE,GAAc,EAAY,kBAC1BA,GAAc,EAAY,mBAEvB,oBAGIC,EAAyB,SAACC,GACrC,OAAOb,EAAoB,mBAAD,OAAoBa,GAAc,WAGjDC,EAAyB,SAACD,EAAYE,EAAmBC,GACpE,IACMC,EADoBjB,EAAoB,mBAAD,OAAoBa,GAAc,UACrCE,GAC1C,OAAKE,GAEEA,EAAgBD,IAFM,IAKlBE,EAA0B,SAACL,EAAYE,EAAmBC,EAAmBG,GACxF,IAAMC,EAAsBpB,EAAoB,mBAAD,OAAoBa,GAAc,UAC3EQ,EAAmBD,EAAoBL,IAAsB,GAC7DO,EAAc,2BACfD,GADe,kBAEjBL,EAAoBG,IAGjBI,EAAajB,KAAKkB,UAAL,2BACdJ,GADc,kBAEhBL,EAAoBO,KAEvBlB,aAAaqB,QAAb,0BAAwCZ,GAAcU,IAG3CG,EAAuB,SAACb,GACnCT,aAAauB,WAAb,0BAA2Cd,KAGhCe,EAAgB,SAACZ,EAAmBa,GAC/C,SAAKb,IAAsBa,IAEbA,EAASC,WAAU,SAACC,GAAD,OAASA,EAAIlB,aAAeG,OAC3Ca,EAASG,OAAS,I,gCCvDtC,uEA4DeC,UApDE,WAAO,IAAD,EACSC,cAAtBC,EADa,EACbA,SAAUC,EADG,EACHA,QACZC,EAAWC,cACjBC,qBAAU,WACRC,YAAYH,KACX,CAACA,IAEJ,IAAMI,GAAgBL,GAAWD,KAAcA,EAASH,OAClDU,EAAmB1C,YAAoB,wBAAyB,UAEtE,OACE,sBAAK2C,UAAU,YAAf,UACE,oBAAIA,UAAU,iBAAd,yBAICP,GAAW,cAAC,IAAD,IAEXK,GACC,qBAAKE,UAAU,UAAf,SACGR,EAASS,KAAI,SAACC,GAAD,OACZ,qBAAKF,UAAU,sBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAASG,GAAE,oBAAeD,EAAQhC,YAAlC,SACGgC,EAAQE,OAGX,eAAC,IAAD,CAAMjD,UAAW4C,IAAqBG,EAAQhC,WAA9C,UACE,uBACA,qBAAK8B,UAAU,sBAAf,+BAKF,uBAEA,4BACGE,EAAQG,sBAlBuBH,EAAQhC","file":"static/js/4.20c71555.chunk.js","sourcesContent":["const Show = ({ condition = true, children }) => {\n  if (!condition) return null;\n\n  return children;\n}\n\nexport default Show;\n","export const getFromLocalStorage = (key, type = 'string') => {\n  if (type === 'object') {\n    const item = localStorage.getItem(key) || '{}';\n    return JSON.parse(item);\n  }\n\n  const item = localStorage.getItem(key);\n  if (!item || item === 'null') return null;\n  return item;\n};\n\nexport const grabSegmentNotificationClass = (finishTime, timeGoal) => {\n  const finishTimeInSeconds = finishTime / 1000.0;\n  const difference = timeGoal - finishTimeInSeconds;\n  if (difference < -8.0) return 'has-text-danger';\n  if (difference < -4.0) return 'has-text-warning';\n\n  return 'has-text-success';\n};\n\nexport const getPreviousWorkoutData = (identifier) => {\n  return getFromLocalStorage(`liveSegmentData-${identifier}`, 'object');\n}\n\nexport const getRelevantSegmentData = (identifier, sessionIdentifier, segmentIdentifier) => {\n  const parsedSegmentData = getFromLocalStorage(`liveSegmentData-${identifier}`, 'object');\n  const relevantSession = parsedSegmentData[sessionIdentifier];\n  if (!relevantSession) return {};\n\n  return relevantSession[segmentIdentifier] || {};\n}\n\nexport const saveRelevantSegmentData = (identifier, sessionIdentifier, segmentIdentifier, segmentData) => {\n  const savedIdentifierData = getFromLocalStorage(`liveSegmentData-${identifier}`, 'object');\n  const savedSessionData = savedIdentifierData[sessionIdentifier] || {};\n  const newSessionData = {\n    ...savedSessionData,\n    [segmentIdentifier]: segmentData\n  };\n\n  const jsonString = JSON.stringify({\n    ...savedIdentifierData,\n    [sessionIdentifier]: newSessionData\n  });\n  localStorage.setItem(`liveSegmentData-${identifier}`, jsonString);\n}\n\nexport const removeWorkoutHistory = (identifier) => {\n  localStorage.removeItem(`liveSegmentData-${identifier}`);\n}\n\nexport const isLastSegment = (segmentIdentifier, segments) => {\n  if (!segmentIdentifier || !segments) return false;\n\n  const index = segments.findIndex((seg) => seg.identifier === segmentIdentifier);\n  return index === (segments.length - 1);\n}\n","import React, { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Loader from '../../Components/Loader';\nimport Show from '../../Components/Show';\nimport { useAuthDispatch, useAuthState } from '../../Context';\nimport { getWorkouts } from '../../Context/actions';\nimport { getFromLocalStorage } from '../Workout/SegmentUtils';\n\nconst Workouts = () => {\n  const { workouts, loading } = useAuthState();\n  const dispatch = useAuthDispatch();\n  useEffect(() => {\n    getWorkouts(dispatch);\n  }, [dispatch]);\n\n  const showWorkouts = !loading && workouts && !!workouts.length;\n  const identifierFromLS = getFromLocalStorage('liveWorkoutIdentifier', 'string');\n\n  return (\n    <div className='ml-5 mr-5'>\n      <h1 className='is-size-2 mb-5'>\n        My Workouts\n      </h1>\n\n      {loading && <Loader />}\n\n      {showWorkouts && (\n        <div className='columns'>\n          {workouts.map((workout) => (\n            <div className='column is-one-third' key={workout.identifier}>\n              <div className='card'>\n                <div className='card-content'>\n                  <div className='content'>\n                    <NavLink to={`/workouts/${workout.identifier}`}>\n                      {workout.name}\n                    </NavLink>\n\n                    <Show condition={identifierFromLS === workout.identifier}>\n                      <br />\n                      <div className='tag is-primary mt-2'>\n                        Active Workout\n                      </div>\n                    </Show>\n\n                    <hr />\n\n                    <p>\n                      {workout.description}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Workouts;\n"],"sourceRoot":""}